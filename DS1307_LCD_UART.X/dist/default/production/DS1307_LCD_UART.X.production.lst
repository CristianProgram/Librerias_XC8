

Microchip Technology PIC18 PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 18 20:33:04 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	pa_nodes0,global,class=CODE,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     tblptru	equ	0xFF8
    73                           tblptrh	equ	0xFF7
    74                           tblptrl	equ	0xFF6
    75                           tablat	equ	0xFF5
    76                           prodh	equ	0xFF4
    77                           prodl	equ	0xFF3
    78                           wreg	equ	0xFE8
    79                           indf2	equ	0xFDF
    80                           fsr2h	equ	0xFDA
    81                           fsr2l	equ	0xFD9
    82                           status	equ	0xFD8
    83                           
    84                           	psect	smallconst
    85  000800                     __psmallconst:
    86                           	opt stack 0
    87  000800  00                 	db	0
    88  000801  86A0               	dw	34464
    89  000803  0001               	dw	1
    90  000805                     __end_of_Bit_Rate_I2C:
    91                           	opt stack 0
    92  000805  2580               	dw	9600
    93  000807  0000               	dw	0
    94  000809                     __end_of_Baud_USART:
    95                           	opt stack 0
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPBUF	set	4041
    98  0000                     _TRISBbits	set	3987
    99  0000                     _SSPCON1	set	4038
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _SSPCON2	set	4037
   103  0000                     _TXREG	set	4013
   104  0000                     _TRISCbits	set	3988
   105  0000                     _SPBRGH	set	4016
   106  0000                     _SPBRG	set	4015
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _RCSTAbits	set	4011
   110  0000                     _TXSTAbits	set	4012
   111  0000                     _RCSTA	set	4011
   112  0000                     _TXSTA	set	4012
   113  0000                     _SSPADD	set	4040
   114  0000                     _ADCON1	set	4033
   115  0000                     _CMCON	set	4020
   116  0000                     _SSPCON2bits	set	4037
   117  0000                     _PORTDbits	set	3971
   118  0000                     _TRISDbits	set	3989
   119  000809                     STR_21:
   120  000809  43                 	db	67	;'C'
   121  00080A  72                 	db	114	;'r'
   122  00080B  69                 	db	105	;'i'
   123  00080C  73                 	db	115	;'s'
   124  00080D  74                 	db	116	;'t'
   125  00080E  69                 	db	105	;'i'
   126  00080F  61                 	db	97	;'a'
   127  000810  6E                 	db	110	;'n'
   128  000811  20                 	db	32
   129  000812  4A                 	db	74	;'J'
   130  000813  75                 	db	117	;'u'
   131  000814  6C                 	db	108	;'l'
   132  000815  69                 	db	105	;'i'
   133  000816  61                 	db	97	;'a'
   134  000817  6E                 	db	110	;'n'
   135  000818  00                 	db	0
   136  000819                     STR_20:
   137  000819  44                 	db	68	;'D'
   138  00081A  53                 	db	83	;'S'
   139  00081B  31                 	db	49	;'1'
   140  00081C  33                 	db	51	;'3'
   141  00081D  30                 	db	48	;'0'
   142  00081E  37                 	db	55	;'7'
   143  00081F  2B                 	db	43
   144  000820  41                 	db	65	;'A'
   145  000821  44                 	db	68	;'D'
   146  000822  53                 	db	83	;'S'
   147  000823  31                 	db	49	;'1'
   148  000824  31                 	db	49	;'1'
   149  000825  31                 	db	49	;'1'
   150  000826  35                 	db	53	;'5'
   151  000827  00                 	db	0
   152  000828                     STR_12:
   153  000828  20                 	db	32
   154  000829  4D                 	db	77	;'M'
   155  00082A  49                 	db	73	;'I'
   156  00082B  45                 	db	69	;'E'
   157  00082C  52                 	db	82	;'R'
   158  00082D  43                 	db	67	;'C'
   159  00082E  4F                 	db	79	;'O'
   160  00082F  4C                 	db	76	;'L'
   161  000830  45                 	db	69	;'E'
   162  000831  53                 	db	83	;'S'
   163  000832  00                 	db	0
   164  000833                     STR_6:
   165  000833  20                 	db	32
   166  000834  44                 	db	68	;'D'
   167  000835  4F                 	db	79	;'O'
   168  000836  4D                 	db	77	;'M'
   169  000837  49                 	db	73	;'I'
   170  000838  4E                 	db	78	;'N'
   171  000839  47                 	db	71	;'G'
   172  00083A  4F                 	db	79	;'O'
   173  00083B  00                 	db	0
   174  00083C                     STR_16:
   175  00083C  20                 	db	32
   176  00083D  56                 	db	86	;'V'
   177  00083E  49                 	db	73	;'I'
   178  00083F  45                 	db	69	;'E'
   179  000840  52                 	db	82	;'R'
   180  000841  4E                 	db	78	;'N'
   181  000842  45                 	db	69	;'E'
   182  000843  53                 	db	83	;'S'
   183  000844  00                 	db	0
   184  000845                     STR_18:
   185  000845  20                 	db	32
   186  000846  53                 	db	83	;'S'
   187  000847  41                 	db	65	;'A'
   188  000848  42                 	db	66	;'B'
   189  000849  41                 	db	65	;'A'
   190  00084A  44                 	db	68	;'D'
   191  00084B  4F                 	db	79	;'O'
   192  00084C  00                 	db	0
   193  00084D                     STR_10:
   194  00084D  20                 	db	32
   195  00084E  4D                 	db	77	;'M'
   196  00084F  41                 	db	65	;'A'
   197  000850  52                 	db	82	;'R'
   198  000851  54                 	db	84	;'T'
   199  000852  45                 	db	69	;'E'
   200  000853  53                 	db	83	;'S'
   201  000854  00                 	db	0
   202  000855                     STR_14:
   203  000855  20                 	db	32
   204  000856  4A                 	db	74	;'J'
   205  000857  55                 	db	85	;'U'
   206  000858  45                 	db	69	;'E'
   207  000859  56                 	db	86	;'V'
   208  00085A  45                 	db	69	;'E'
   209  00085B  53                 	db	83	;'S'
   210  00085C  00                 	db	0
   211  00085D                     STR_8:
   212  00085D  20                 	db	32
   213  00085E  4C                 	db	76	;'L'
   214  00085F  55                 	db	85	;'U'
   215  000860  4E                 	db	78	;'N'
   216  000861  45                 	db	69	;'E'
   217  000862  53                 	db	83	;'S'
   218  000863  00                 	db	0
   219  000864                     STR_22:
   220  000864  4D                 	db	77	;'M'
   221  000865  45                 	db	69	;'E'
   222  000866  4E                 	db	78	;'N'
   223  000867  55                 	db	85	;'U'
   224  000868  00                 	db	0
   225  000869                     STR_19:
   226  000869  53                 	db	83	;'S'
   227  00086A  41                 	db	65	;'A'
   228  00086B  42                 	db	66	;'B'
   229  00086C  00                 	db	0
   230  00086D                     STR_13:
   231  00086D  4D                 	db	77	;'M'
   232  00086E  49                 	db	73	;'I'
   233  00086F  45                 	db	69	;'E'
   234  000870  00                 	db	0
   235  000871                     STR_17:
   236  000871  56                 	db	86	;'V'
   237  000872  49                 	db	73	;'I'
   238  000873  45                 	db	69	;'E'
   239  000874  00                 	db	0
   240  000875                     STR_15:
   241  000875  4A                 	db	74	;'J'
   242  000876  55                 	db	85	;'U'
   243  000877  45                 	db	69	;'E'
   244  000878  00                 	db	0
   245  000879                     STR_1:
   246  000879  20                 	db	32
   247  00087A  41                 	db	65	;'A'
   248  00087B  4D                 	db	77	;'M'
   249  00087C  00                 	db	0
   250  00087D                     STR_7:
   251  00087D  44                 	db	68	;'D'
   252  00087E  4F                 	db	79	;'O'
   253  00087F  4D                 	db	77	;'M'
   254  000880  00                 	db	0
   255  000881                     STR_2:
   256  000881  20                 	db	32
   257  000882  50                 	db	80	;'P'
   258  000883  4D                 	db	77	;'M'
   259  000884  00                 	db	0
   260  000885                     STR_9:
   261  000885  6C                 	db	108	;'l'
   262  000886  55                 	db	85	;'U'
   263  000887  4E                 	db	78	;'N'
   264  000888  00                 	db	0
   265  000889                     STR_11:
   266  000889  4D                 	db	77	;'M'
   267  00088A  41                 	db	65	;'A'
   268  00088B  52                 	db	82	;'R'
   269  00088C  00                 	db	0
   270  00088D                     STR_4:
   271  00088D  0D                 	db	13
   272  00088E  0A                 	db	10
   273  00088F  00                 	db	0
   274  0000                     
   275                           ; #config settings
   276  000890  00                 	db	0	; dummy byte at the end
   277  0000                     tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           prodh	equ	0xFF4
   282                           prodl	equ	0xFF3
   283                           wreg	equ	0xFE8
   284                           indf2	equ	0xFDF
   285                           fsr2h	equ	0xFDA
   286                           fsr2l	equ	0xFD9
   287                           status	equ	0xFD8
   288                           
   289                           	psect	cinit
   290  00159E                     __pcinit:
   291                           	opt stack 0
   292  00159E                     start_initialization:
   293                           	opt stack 0
   294  00159E                     __initialization:
   295                           	opt stack 0
   296                           
   297                           ; Clear objects allocated to COMRAM (33 bytes)
   298  00159E  EE00  F025         	lfsr	0,__pbssCOMRAM
   299  0015A2  0E21               	movlw	33
   300  0015A4                     clear_0:
   301  0015A4  6AEE               	clrf	postinc0,c
   302  0015A6  06E8               	decf	wreg,f,c
   303  0015A8  E1FD               	bnz	clear_0
   304  0015AA                     end_of_initialization:
   305                           	opt stack 0
   306  0015AA                     __end_of__initialization:
   307                           	opt stack 0
   308  0015AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309  0015AC  6EF8               	movwf	tblptru,c
   310  0015AE  0100               	movlb	0
   311  0015B0  EF49  F007         	goto	_main	;jump to C main() function
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           prodh	equ	0xFF4
   317                           prodl	equ	0xFF3
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           indf2	equ	0xFDF
   321                           fsr2h	equ	0xFDA
   322                           fsr2l	equ	0xFD9
   323                           status	equ	0xFD8
   324                           
   325                           	psect	bssCOMRAM
   326  000025                     __pbssCOMRAM:
   327                           	opt stack 0
   328  000025                     _Year:
   329                           	opt stack 0
   330  000025                     	ds	2
   331  000027                     _Month:
   332                           	opt stack 0
   333  000027                     	ds	2
   334  000029                     _Date:
   335                           	opt stack 0
   336  000029                     	ds	2
   337  00002B                     _Day:
   338                           	opt stack 0
   339  00002B                     	ds	2
   340  00002D                     _Hours:
   341                           	opt stack 0
   342  00002D                     	ds	2
   343  00002F                     _Minutes:
   344                           	opt stack 0
   345  00002F                     	ds	2
   346  000031                     _Seconds:
   347                           	opt stack 0
   348  000031                     	ds	2
   349  000033                     _Salir:
   350                           	opt stack 0
   351  000033                     	ds	2
   352  000035                     _Menu:
   353                           	opt stack 0
   354  000035                     	ds	2
   355  000037                     _meridiano:
   356                           	opt stack 0
   357  000037                     	ds	2
   358  000039                     _USART_Status:
   359                           	opt stack 0
   360  000039                     	ds	1
   361  00003A                     _txt_DS1307:
   362                           	opt stack 0
   363  00003A                     	ds	12
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           prodh	equ	0xFF4
   369                           prodl	equ	0xFF3
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           indf2	equ	0xFDF
   373                           fsr2h	equ	0xFDA
   374                           fsr2l	equ	0xFD9
   375                           status	equ	0xFD8
   376                           
   377                           	psect	cstackCOMRAM
   378  000001                     __pcstackCOMRAM:
   379                           	opt stack 0
   380  000001                     ??_Lcd_Cmd:
   381  000001                     ??_Lcd_Chr_CP:
   382  000001                     ??_IdleI2C:
   383  000001                     ?___wmul:
   384                           	opt stack 0
   385  000001                     ?___awdiv:
   386                           	opt stack 0
   387  000001                     ?___awmod:
   388                           	opt stack 0
   389  000001                     ?___lwdiv:
   390                           	opt stack 0
   391  000001                     WriteUSART@data:
   392                           	opt stack 0
   393  000001                     OpenI2C@slew:
   394                           	opt stack 0
   395  000001                     OpenUSART@spbrg:
   396                           	opt stack 0
   397  000001                     ___wmul@multiplier:
   398                           	opt stack 0
   399  000001                     ___awdiv@dividend:
   400                           	opt stack 0
   401  000001                     ___awmod@dividend:
   402                           	opt stack 0
   403  000001                     ___lwdiv@dividend:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x0
   407  000001                     	ds	1
   408  000002                     OpenI2C@sync_mode:
   409                           	opt stack 0
   410  000002                     WriteI2C@data_out:
   411                           	opt stack 0
   412  000002                     putsUSART@data:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x1
   416  000002                     	ds	1
   417  000003                     ?_leer_DS1307:
   418                           	opt stack 0
   419  000003                     Lcd_Chr_CP@data:
   420                           	opt stack 0
   421  000003                     Lcd_Cmd@data:
   422                           	opt stack 0
   423  000003                     OpenUSART@config:
   424                           	opt stack 0
   425  000003                     leer_DS1307@dirrecion_esclavo:
   426                           	opt stack 0
   427  000003                     ___wmul@multiplicand:
   428                           	opt stack 0
   429  000003                     ___awdiv@divisor:
   430                           	opt stack 0
   431  000003                     ___awmod@divisor:
   432                           	opt stack 0
   433  000003                     ___lwdiv@divisor:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437  000003                     	ds	1
   438  000004                     ??_putsUSART:
   439  000004                     ??_Lcd_Init:
   440  000004                     Lcd_Out2@x:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x3
   444  000004                     	ds	1
   445  000005                     Lcd_Init@data:
   446                           	opt stack 0
   447  000005                     ___awdiv@counter:
   448                           	opt stack 0
   449  000005                     ___awmod@counter:
   450                           	opt stack 0
   451  000005                     Lcd_Out2@buffer:
   452                           	opt stack 0
   453  000005                     leer_DS1307@dirrecion_memoria:
   454                           	opt stack 0
   455  000005                     ___wmul@product:
   456                           	opt stack 0
   457  000005                     ___lwdiv@quotient:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x4
   461  000005                     	ds	1
   462  000006                     ___awdiv@sign:
   463                           	opt stack 0
   464  000006                     ___awmod@sign:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  000006                     	ds	1
   469  000007                     ?_BCD2Dec:
   470                           	opt stack 0
   471  000007                     Lcd_Out2@y:
   472                           	opt stack 0
   473  000007                     leer_DS1307@Data_DS1307:
   474                           	opt stack 0
   475  000007                     ___lwdiv@counter:
   476                           	opt stack 0
   477  000007                     BCD2Dec@Temp_3:
   478                           	opt stack 0
   479  000007                     ___awdiv@quotient:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483  000007                     	ds	1
   484  000008                     ?___lwmod:
   485                           	opt stack 0
   486  000008                     Lcd_Out2@data:
   487                           	opt stack 0
   488  000008                     ___lwmod@dividend:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x7
   492  000008                     	ds	1
   493  000009                     ??_BCD2Dec:
   494  000009                     ?_Dec2BCD:
   495                           	opt stack 0
   496  000009                     dia_semana@dia_semana:
   497                           	opt stack 0
   498  000009                     Dec2BCD@Temp_3:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502  000009                     	ds	1
   503  00000A                     ___lwmod@divisor:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x9
   507  00000A                     	ds	1
   508  00000B                     ??_dia_semana:
   509  00000B                     ??_Dec2BCD:
   510                           
   511                           ; 1 bytes @ 0xA
   512  00000B                     	ds	1
   513  00000C                     ___lwmod@counter:
   514                           	opt stack 0
   515  00000C                     BCD2Dec@Temp_1:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0xB
   519  00000C                     	ds	1
   520  00000D                     Dec2BCD@Temp_1:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0xC
   524  00000D                     	ds	1
   525  00000E                     BCD2Dec@Temp_2:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0xD
   529  00000E                     	ds	1
   530  00000F                     Dec2BCD@Temp_2:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0xE
   534  00000F                     	ds	1
   535  000010                     
   536                           ; 1 bytes @ 0xF
   537  000010                     	ds	1
   538  000011                     escribir_DS1307@dirrecion_esclavo:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x10
   542  000011                     	ds	2
   543  000013                     escribir_DS1307@dirrecion_memoria:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x12
   547  000013                     	ds	2
   548  000015                     escribir_DS1307@dato:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x14
   552  000015                     	ds	2
   553  000017                     set_time_DS1307@set_segundos:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x16
   557  000017                     	ds	2
   558  000019                     set_time_DS1307@set_minutos:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x18
   562  000019                     	ds	2
   563  00001B                     set_time_DS1307@set_horas:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x1A
   567  00001B                     	ds	2
   568  00001D                     set_time_DS1307@set_dias:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x1C
   572  00001D                     	ds	2
   573  00001F                     set_time_DS1307@set_date:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x1E
   577  00001F                     	ds	2
   578  000021                     set_time_DS1307@set_mes:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x20
   582  000021                     	ds	2
   583  000023                     set_time_DS1307@set_anno:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x22
   587  000023                     	ds	2
   588  000025                     tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           prodh	equ	0xFF4
   593                           prodl	equ	0xFF3
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           indf2	equ	0xFDF
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8
   600                           
   601                           ; 1 bytes @ 0x24
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 66 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   621 ;;      Params:         0       0       0       0       0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels required when called:    4
   627 ;; This function calls:
   628 ;;		_DS1307
   629 ;;		_IdleI2C
   630 ;;		_Lcd_Cmd
   631 ;;		_Lcd_Init
   632 ;;		_Lcd_Out2
   633 ;;		_Leer_Pulsador
   634 ;;		_OpenI2C
   635 ;;		_OpenUSART
   636 ;;		_set_time_DS1307
   637 ;; This function is called by:
   638 ;;		Startup code after reset
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text0
   643  000E92                     __ptext0:
   644                           	opt stack 0
   645  000E92                     _main:
   646                           	opt stack 27
   647                           
   648                           ;main.c: 68: CMCON = 0x07;
   649                           
   650                           ;incstack = 0
   651  000E92  0E07               	movlw	7
   652  000E94  6EB4               	movwf	4020,c	;volatile
   653                           
   654                           ;main.c: 69: ADCON1 = 0xFF;
   655  000E96  68C1               	setf	4033,c	;volatile
   656                           
   657                           ;main.c: 70: TRISDbits.RD1=1;
   658  000E98  8295               	bsf	3989,1,c	;volatile
   659                           
   660                           ;main.c: 72: OpenI2C(0b00001000, 0b10000000);
   661  000E9A  0E80               	movlw	128
   662  000E9C  6E01               	movwf	OpenI2C@slew,c
   663  000E9E  0E08               	movlw	8
   664  000EA0  ECB5  F00A         	call	_OpenI2C
   665                           
   666                           ;main.c: 73: SSPADD =(16000000/Bit_Rate_I2C)/4-1;
   667  000EA4  0E27               	movlw	39
   668  000EA6  6EC8               	movwf	4040,c	;volatile
   669                           
   670                           ;main.c: 74: IdleI2C();
   671  000EA8  ECE3  F00A         	call	_IdleI2C	;wreg free
   672                           
   673                           ;main.c: 75: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   674  000EAC  80C5               	bsf	4037,0,c	;volatile
   675  000EAE                     l184:
   676  000EAE  B0C5               	btfsc	4037,0,c	;volatile
   677  000EB0  D7FE               	goto	l184
   678                           
   679                           ;main.c: 77: OpenUSART( 0b01111111 & 0b10111111 &
   680                           ;main.c: 78: 0b11111110 & 0b11111101 &
   681                           ;main.c: 79: 0b11111111 & 0b11111111 &
   682                           ;main.c: 80: 0b11011111,spbrg);
   683  000EB2  6A02               	clrf	OpenUSART@spbrg+1,c
   684  000EB4  0E67               	movlw	103
   685  000EB6  6E01               	movwf	OpenUSART@spbrg,c
   686  000EB8  0E1C               	movlw	28
   687  000EBA  ECB8  F009         	call	_OpenUSART
   688                           
   689                           ;main.c: 82: Lcd_Init();
   690  000EBE  ECD3  F005         	call	_Lcd_Init	;wreg free
   691                           
   692                           ;main.c: 84: Lcd_Cmd(1);
   693  000EC2  0E01               	movlw	1
   694  000EC4  ECD1  F006         	call	_Lcd_Cmd
   695                           
   696                           ;main.c: 85: Lcd_Cmd(12);
   697  000EC8  0E0C               	movlw	12
   698  000ECA  ECD1  F006         	call	_Lcd_Cmd
   699                           
   700                           ;main.c: 88: set_time_DS1307 (0,47,19,7,18,8,18);
   701  000ECE  6A18               	clrf	set_time_DS1307@set_segundos+1,c
   702  000ED0  6A17               	clrf	set_time_DS1307@set_segundos,c
   703  000ED2  6A1A               	clrf	set_time_DS1307@set_minutos+1,c
   704  000ED4  0E2F               	movlw	47
   705  000ED6  6E19               	movwf	set_time_DS1307@set_minutos,c
   706  000ED8  6A1C               	clrf	set_time_DS1307@set_horas+1,c
   707  000EDA  0E13               	movlw	19
   708  000EDC  6E1B               	movwf	set_time_DS1307@set_horas,c
   709  000EDE  6A1E               	clrf	set_time_DS1307@set_dias+1,c
   710  000EE0  0E07               	movlw	7
   711  000EE2  6E1D               	movwf	set_time_DS1307@set_dias,c
   712  000EE4  6A20               	clrf	set_time_DS1307@set_date+1,c
   713  000EE6  0E12               	movlw	18
   714  000EE8  6E1F               	movwf	set_time_DS1307@set_date,c
   715  000EEA  6A22               	clrf	set_time_DS1307@set_mes+1,c
   716  000EEC  0E08               	movlw	8
   717  000EEE  6E21               	movwf	set_time_DS1307@set_mes,c
   718  000EF0  6A24               	clrf	set_time_DS1307@set_anno+1,c
   719  000EF2  0E12               	movlw	18
   720  000EF4  6E23               	movwf	set_time_DS1307@set_anno,c
   721  000EF6  ECAE  F007         	call	_set_time_DS1307	;wreg free
   722  000EFA  D010               	goto	l1948
   723  000EFC                     l1944:
   724                           
   725                           ;main.c: 96: Lcd_Out2(1,0,"DS1307+ADS1115");
   726  000EFC  0E00               	movlw	0
   727  000EFE  6E04               	movwf	Lcd_Out2@x,c
   728  000F00  0E19               	movlw	low STR_20
   729  000F02  D826               	call	PL30	;call to abstracted procedure
   730  000F04  0E01               	movlw	1
   731  000F06  ECAB  F008         	call	_Lcd_Out2
   732                           
   733                           ;main.c: 97: Lcd_Out2(2,0,"Cristian Julian");
   734  000F0A  0E00               	movlw	0
   735  000F0C  6E04               	movwf	Lcd_Out2@x,c
   736  000F0E  0E09               	movlw	low STR_21
   737  000F10  D81F               	call	PL30	;call to abstracted procedure
   738  000F12  0E02               	movlw	2
   739  000F14  ECAB  F008         	call	_Lcd_Out2
   740                           
   741                           ;main.c: 99: Leer_Pulsador();
   742  000F18  EC72  F00A         	call	_Leer_Pulsador	;wreg free
   743  000F1C                     l1948:
   744  000F1C  5035               	movf	_Menu,w,c
   745  000F1E  1036               	iorwf	_Menu+1,w,c
   746  000F20  E10A               	bnz	l1954
   747  000F22  D7EC               	goto	l1944
   748  000F24                     l1950:
   749                           
   750                           ;main.c: 102: Lcd_Out2(1,0,"MENU");
   751  000F24  0E00               	movlw	0
   752  000F26  6E04               	movwf	Lcd_Out2@x,c
   753  000F28  0E64               	movlw	low STR_22
   754  000F2A  D812               	call	PL30	;call to abstracted procedure
   755  000F2C  0E01               	movlw	1
   756  000F2E  ECAB  F008         	call	_Lcd_Out2
   757                           
   758                           ;main.c: 103: Leer_Pulsador();
   759  000F32  EC72  F00A         	call	_Leer_Pulsador	;wreg free
   760  000F36                     l1954:
   761  000F36  0435               	decf	_Menu,w,c
   762  000F38  1036               	iorwf	_Menu+1,w,c
   763  000F3A  E105               	bnz	l1960
   764  000F3C  D7F3               	goto	l1950
   765  000F3E                     l1956:
   766                           
   767                           ;main.c: 106: DS1307();
   768  000F3E  EC49  F004         	call	_DS1307	;wreg free
   769                           
   770                           ;main.c: 108: Leer_Pulsador();
   771  000F42  EC72  F00A         	call	_Leer_Pulsador	;wreg free
   772  000F46                     l1960:
   773  000F46  0E02               	movlw	2
   774  000F48  1835               	xorwf	_Menu,w,c
   775  000F4A  1036               	iorwf	_Menu+1,w,c
   776  000F4C  E1E7               	bnz	l1948
   777  000F4E  D7F7               	goto	l1956
   778  000F50                     __end_of_main:
   779                           	opt stack 0
   780  000F50                     PL30:
   781                           	opt stack 27
   782  000F50  6E05               	movwf	Lcd_Out2@buffer,c
   783  000F52  5005               	movf	Lcd_Out2@buffer,w,c
   784  000F54  A4D8               	btfss	status,2,c
   785  000F56  0E08               	movlw	high __smallconst
   786  000F58  6E06               	movwf	Lcd_Out2@buffer+1,c
   787  000F5A  0012               	return	
   788  000F5C                     __end_ofPL30:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           prodh	equ	0xFF4
   795                           prodl	equ	0xFF3
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           indf2	equ	0xFDF
   799                           fsr2h	equ	0xFDA
   800                           fsr2l	equ	0xFD9
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _set_time_DS1307 *****************
   804 ;; Defined at:
   805 ;;		line 136 in file "I2C_DS1307.h"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  set_segundos    2   22[COMRAM] unsigned short 
   808 ;;  set_minutos     2   24[COMRAM] unsigned short 
   809 ;;  set_horas       2   26[COMRAM] unsigned short 
   810 ;;  set_dias        2   28[COMRAM] unsigned short 
   811 ;;  set_date        2   30[COMRAM] unsigned short 
   812 ;;  set_mes         2   32[COMRAM] unsigned short 
   813 ;;  set_anno        2   34[COMRAM] unsigned short 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:        14       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:        14       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:       14 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    3
   832 ;; This function calls:
   833 ;;		_Dec2BCD
   834 ;;		_escribir_DS1307
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text1
   841  000F5C                     __ptext1:
   842                           	opt stack 0
   843  000F5C                     _set_time_DS1307:
   844                           	opt stack 0
   845                           
   846                           ;incstack = 0
   847  000F5C  D852               	call	PL6	;call to abstracted procedure
   848  000F5E  6A13               	clrf	escribir_DS1307@dirrecion_memoria,c
   849  000F60  C017  F009         	movff	set_time_DS1307@set_segundos,Dec2BCD@Temp_3
   850  000F64  C018  F00A         	movff	set_time_DS1307@set_segundos+1,Dec2BCD@Temp_3+1
   851  000F68  EC65  F008         	call	_Dec2BCD	;wreg free
   852  000F6C  D84F               	call	PL10	;call to abstracted procedure
   853  000F6E  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   854  000F72  D847               	call	PL6	;call to abstracted procedure
   855  000F74  0E01               	movlw	1
   856  000F76  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   857  000F78  C019  F009         	movff	set_time_DS1307@set_minutos,Dec2BCD@Temp_3
   858  000F7C  C01A  F00A         	movff	set_time_DS1307@set_minutos+1,Dec2BCD@Temp_3+1
   859  000F80  EC65  F008         	call	_Dec2BCD	;wreg free
   860  000F84  D843               	call	PL10	;call to abstracted procedure
   861  000F86  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   862  000F8A  D83B               	call	PL6	;call to abstracted procedure
   863  000F8C  0E02               	movlw	2
   864  000F8E  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   865  000F90  C01B  F009         	movff	set_time_DS1307@set_horas,Dec2BCD@Temp_3
   866  000F94  C01C  F00A         	movff	set_time_DS1307@set_horas+1,Dec2BCD@Temp_3+1
   867  000F98  EC65  F008         	call	_Dec2BCD	;wreg free
   868  000F9C  D837               	call	PL10	;call to abstracted procedure
   869  000F9E  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   870  000FA2  D82F               	call	PL6	;call to abstracted procedure
   871  000FA4  0E03               	movlw	3
   872  000FA6  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   873  000FA8  C01D  F009         	movff	set_time_DS1307@set_dias,Dec2BCD@Temp_3
   874  000FAC  C01E  F00A         	movff	set_time_DS1307@set_dias+1,Dec2BCD@Temp_3+1
   875  000FB0  EC65  F008         	call	_Dec2BCD	;wreg free
   876  000FB4  D82B               	call	PL10	;call to abstracted procedure
   877  000FB6  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   878  000FBA  D823               	call	PL6	;call to abstracted procedure
   879  000FBC  0E04               	movlw	4
   880  000FBE  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   881  000FC0  C01F  F009         	movff	set_time_DS1307@set_date,Dec2BCD@Temp_3
   882  000FC4  C020  F00A         	movff	set_time_DS1307@set_date+1,Dec2BCD@Temp_3+1
   883  000FC8  EC65  F008         	call	_Dec2BCD	;wreg free
   884  000FCC  D81F               	call	PL10	;call to abstracted procedure
   885  000FCE  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   886  000FD2  D817               	call	PL6	;call to abstracted procedure
   887  000FD4  0E05               	movlw	5
   888  000FD6  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   889  000FD8  C021  F009         	movff	set_time_DS1307@set_mes,Dec2BCD@Temp_3
   890  000FDC  C022  F00A         	movff	set_time_DS1307@set_mes+1,Dec2BCD@Temp_3+1
   891  000FE0  EC65  F008         	call	_Dec2BCD	;wreg free
   892  000FE4  D813               	call	PL10	;call to abstracted procedure
   893  000FE6  EC8C  F00A         	call	_escribir_DS1307	;wreg free
   894  000FEA  D80B               	call	PL6	;call to abstracted procedure
   895  000FEC  0E06               	movlw	6
   896  000FEE  6E13               	movwf	escribir_DS1307@dirrecion_memoria,c
   897  000FF0  C023  F009         	movff	set_time_DS1307@set_anno,Dec2BCD@Temp_3
   898  000FF4  C024  F00A         	movff	set_time_DS1307@set_anno+1,Dec2BCD@Temp_3+1
   899  000FF8  EC65  F008         	call	_Dec2BCD	;wreg free
   900  000FFC  D807               	call	PL10	;call to abstracted procedure
   901  000FFE  EF8C  F00A         	goto	_escribir_DS1307	;wreg free
   902  001002                     __end_of_set_time_DS1307:
   903                           	opt stack 0
   904  001002                     PL6:
   905                           	opt stack 27
   906  001002  6A12               	clrf	escribir_DS1307@dirrecion_esclavo+1,c
   907  001004  0ED0               	movlw	208
   908  001006  6E11               	movwf	escribir_DS1307@dirrecion_esclavo,c
   909  001008  6A14               	clrf	escribir_DS1307@dirrecion_memoria+1,c
   910  00100A  0CD0               	retlw	208
   911  00100C                     __end_ofPL6:
   912                           	opt stack 0
   913  00100C                     PL10:
   914                           	opt stack 27
   915  00100C  C009  F015         	movff	?_Dec2BCD,escribir_DS1307@dato
   916  001010  C00A  F016         	movff	?_Dec2BCD+1,escribir_DS1307@dato+1
   917  001014  0012               	return	
   918  001016                     __end_ofPL10:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           prodh	equ	0xFF4
   925                           prodl	equ	0xFF3
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           indf2	equ	0xFDF
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _escribir_DS1307 *****************
   934 ;; Defined at:
   935 ;;		line 66 in file "I2C_DS1307.h"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  dirrecion_es    2   16[COMRAM] unsigned short 
   938 ;;  dirrecion_me    2   18[COMRAM] unsigned short 
   939 ;;  dato            2   20[COMRAM] unsigned short 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         6       0       0       0       0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0
   954 ;;      Totals:         6       0       0       0       0       0       0       0       0
   955 ;;Total ram usage:        6 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		_IdleI2C
   960 ;;		_WriteI2C
   961 ;; This function is called by:
   962 ;;		_set_time_DS1307
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text2
   967  001518                     __ptext2:
   968                           	opt stack 0
   969  001518                     _escribir_DS1307:
   970                           	opt stack 27
   971                           
   972                           ;I2C_DS1307.h: 69: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   973                           
   974                           ;incstack = 0
   975  001518  80C5               	bsf	4037,0,c	;volatile
   976  00151A                     l134:
   977  00151A  B0C5               	btfsc	4037,0,c	;volatile
   978  00151C  D7FE               	goto	l134
   979                           
   980                           ;I2C_DS1307.h: 70: IdleI2C();
   981  00151E  ECE3  F00A         	call	_IdleI2C	;wreg free
   982                           
   983                           ;I2C_DS1307.h: 71: WriteI2C(dirrecion_esclavo);
   984  001522  5011               	movf	escribir_DS1307@dirrecion_esclavo,w,c
   985  001524  EC31  F00A         	call	_WriteI2C
   986                           
   987                           ;I2C_DS1307.h: 72: IdleI2C();
   988  001528  ECE3  F00A         	call	_IdleI2C	;wreg free
   989                           
   990                           ;I2C_DS1307.h: 73: WriteI2C(dirrecion_memoria);
   991  00152C  5013               	movf	escribir_DS1307@dirrecion_memoria,w,c
   992  00152E  EC31  F00A         	call	_WriteI2C
   993                           
   994                           ;I2C_DS1307.h: 74: IdleI2C();
   995  001532  ECE3  F00A         	call	_IdleI2C	;wreg free
   996                           
   997                           ;I2C_DS1307.h: 75: WriteI2C(dato);
   998  001536  5015               	movf	escribir_DS1307@dato,w,c
   999  001538  EC31  F00A         	call	_WriteI2C
  1000                           
  1001                           ;I2C_DS1307.h: 76: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1002  00153C  84C5               	bsf	4037,2,c	;volatile
  1003  00153E                     l137:
  1004  00153E  A4C5               	btfss	4037,2,c	;volatile
  1005  001540  0012               	return		;funcret
  1006  001542  D7FD               	goto	l137
  1007  001544                     __end_of_escribir_DS1307:
  1008                           	opt stack 0
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           prodh	equ	0xFF4
  1014                           prodl	equ	0xFF3
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           indf2	equ	0xFDF
  1018                           fsr2h	equ	0xFDA
  1019                           fsr2l	equ	0xFD9
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _Dec2BCD *****************
  1023 ;; Defined at:
  1024 ;;		line 161 in file "I2C_DS1307.h"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  Temp_3          2    8[COMRAM] short 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  Temp_2          2   14[COMRAM] short 
  1029 ;;  Temp_1          2   12[COMRAM] short 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    8[COMRAM] unsigned short 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         2       0       0       0       0       0       0       0       0
  1040 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1041 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1042 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1043 ;;Total ram usage:        8 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		___awdiv
  1048 ;;		___awmod
  1049 ;; This function is called by:
  1050 ;;		_set_time_DS1307
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text3
  1055  0010CA                     __ptext3:
  1056                           	opt stack 0
  1057  0010CA                     _Dec2BCD:
  1058                           	opt stack 0
  1059                           
  1060                           ;I2C_DS1307.h: 162: short Temp_1, Temp_2;
  1061                           ;I2C_DS1307.h: 163: Temp_1 = Temp_3%10;
  1062                           
  1063                           ;incstack = 0
  1064  0010CA  D83D               	call	PL38	;call to abstracted procedure
  1065  0010CC  EC25  F009         	call	___awmod	;wreg free
  1066  0010D0  C001  F00D         	movff	?___awmod,Dec2BCD@Temp_1
  1067  0010D4  C002  F00E         	movff	?___awmod+1,Dec2BCD@Temp_1+1
  1068                           
  1069                           ;I2C_DS1307.h: 164: Temp_1 = Temp_1 & 0x0F;
  1070  0010D8  0E0F               	movlw	15
  1071  0010DA  160D               	andwf	Dec2BCD@Temp_1,f,c
  1072  0010DC  6A0E               	clrf	Dec2BCD@Temp_1+1,c
  1073                           
  1074                           ;I2C_DS1307.h: 165: Temp_3 = Temp_3/10;
  1075  0010DE  C009  F001         	movff	Dec2BCD@Temp_3,___awdiv@dividend
  1076  0010E2  C00A  F002         	movff	Dec2BCD@Temp_3+1,___awdiv@dividend+1
  1077  0010E6  6A04               	clrf	___awdiv@divisor+1,c
  1078  0010E8  0E0A               	movlw	10
  1079  0010EA  6E03               	movwf	___awdiv@divisor,c
  1080  0010EC  ECE9  F008         	call	___awdiv	;wreg free
  1081  0010F0  C001  F009         	movff	?___awdiv,Dec2BCD@Temp_3
  1082  0010F4  C002  F00A         	movff	?___awdiv+1,Dec2BCD@Temp_3+1
  1083                           
  1084                           ;I2C_DS1307.h: 166: Temp_2 = Temp_3%10;
  1085  0010F8  D826               	call	PL38	;call to abstracted procedure
  1086  0010FA  EC25  F009         	call	___awmod	;wreg free
  1087  0010FE  C001  F00F         	movff	?___awmod,Dec2BCD@Temp_2
  1088  001102  C002  F010         	movff	?___awmod+1,Dec2BCD@Temp_2+1
  1089                           
  1090                           ;I2C_DS1307.h: 167: Temp_2 = 0x0F & Temp_2;
  1091  001106  0E0F               	movlw	15
  1092  001108  160F               	andwf	Dec2BCD@Temp_2,f,c
  1093  00110A  6A10               	clrf	Dec2BCD@Temp_2+1,c
  1094                           
  1095                           ;I2C_DS1307.h: 168: Temp_2 = Temp_2 << 4;
  1096  00110C  C00F  F00B         	movff	Dec2BCD@Temp_2,??_Dec2BCD
  1097  001110  C010  F00C         	movff	Dec2BCD@Temp_2+1,??_Dec2BCD+1
  1098  001114  3A0B               	swapf	??_Dec2BCD,f,c
  1099  001116  3A0C               	swapf	??_Dec2BCD+1,f,c
  1100  001118  0EF0               	movlw	240
  1101  00111A  160C               	andwf	??_Dec2BCD+1,f,c
  1102  00111C  500B               	movf	??_Dec2BCD,w,c
  1103  00111E  0B0F               	andlw	15
  1104  001120  120C               	iorwf	??_Dec2BCD+1,f,c
  1105  001122  0EF0               	movlw	240
  1106  001124  160B               	andwf	??_Dec2BCD,f,c
  1107  001126  C00B  F00F         	movff	??_Dec2BCD,Dec2BCD@Temp_2
  1108  00112A  C00C  F010         	movff	??_Dec2BCD+1,Dec2BCD@Temp_2+1
  1109                           
  1110                           ;I2C_DS1307.h: 169: Temp_2 = 0xF0 & Temp_2;
  1111  00112E  160F               	andwf	Dec2BCD@Temp_2,f,c
  1112  001130  6A10               	clrf	Dec2BCD@Temp_2+1,c
  1113                           
  1114                           ;I2C_DS1307.h: 170: Temp_1 = Temp_1 | Temp_2; return Temp_1;
  1115  001132  500F               	movf	Dec2BCD@Temp_2,w,c
  1116  001134  120D               	iorwf	Dec2BCD@Temp_1,f,c
  1117  001136  5010               	movf	Dec2BCD@Temp_2+1,w,c
  1118  001138  100E               	iorwf	Dec2BCD@Temp_1+1,w,c
  1119  00113A  6E0E               	movwf	Dec2BCD@Temp_1+1,c
  1120  00113C  C00D  F009         	movff	Dec2BCD@Temp_1,?_Dec2BCD
  1121  001140  C00E  F00A         	movff	Dec2BCD@Temp_1+1,?_Dec2BCD+1
  1122  001144  0012               	return		;funcret
  1123  001146                     __end_of_Dec2BCD:
  1124                           	opt stack 0
  1125  001146                     PL38:
  1126                           	opt stack 28
  1127  001146  C009  F001         	movff	Dec2BCD@Temp_3,___awmod@dividend
  1128  00114A  C00A  F002         	movff	Dec2BCD@Temp_3+1,___awmod@dividend+1
  1129  00114E  6A04               	clrf	___awmod@divisor+1,c
  1130  001150  0E0A               	movlw	10
  1131  001152  6E03               	movwf	___awmod@divisor,c
  1132  001154  0C0A               	retlw	10
  1133  001156                     __end_ofPL38:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           prodh	equ	0xFF4
  1140                           prodl	equ	0xFF3
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           indf2	equ	0xFDF
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function ___awmod *****************
  1149 ;; Defined at:
  1150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  dividend        2    0[COMRAM] int 
  1153 ;;  divisor         2    2[COMRAM] int 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  sign            1    5[COMRAM] unsigned char 
  1156 ;;  counter         1    4[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  2    0[COMRAM] int 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         4       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        6 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_Dec2BCD
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  00124A                     __ptext4:
  1181                           	opt stack 0
  1182  00124A                     ___awmod:
  1183                           	opt stack 28
  1184                           
  1185                           ;incstack = 0
  1186  00124A  6A06               	clrf	___awmod@sign,c
  1187  00124C  AE02               	btfss	___awmod@dividend+1,7,c
  1188  00124E  D006               	goto	l1638
  1189  001250  6C01               	negf	___awmod@dividend,c
  1190  001252  1E02               	comf	___awmod@dividend+1,f,c
  1191  001254  B0D8               	btfsc	status,0,c
  1192  001256  2A02               	incf	___awmod@dividend+1,f,c
  1193  001258  0E01               	movlw	1
  1194  00125A  6E06               	movwf	___awmod@sign,c
  1195  00125C                     l1638:
  1196  00125C  AE04               	btfss	___awmod@divisor+1,7,c
  1197  00125E  D004               	goto	l1642
  1198  001260  6C03               	negf	___awmod@divisor,c
  1199  001262  1E04               	comf	___awmod@divisor+1,f,c
  1200  001264  B0D8               	btfsc	status,0,c
  1201  001266  2A04               	incf	___awmod@divisor+1,f,c
  1202  001268                     l1642:
  1203  001268  5003               	movf	___awmod@divisor,w,c
  1204  00126A  1004               	iorwf	___awmod@divisor+1,w,c
  1205  00126C  E017               	bz	l1658
  1206  00126E  0E01               	movlw	1
  1207  001270  6E05               	movwf	___awmod@counter,c
  1208  001272  D004               	goto	l1648
  1209  001274                     l1646:
  1210  001274  90D8               	bcf	status,0,c
  1211  001276  3603               	rlcf	___awmod@divisor,f,c
  1212  001278  3604               	rlcf	___awmod@divisor+1,f,c
  1213  00127A  2A05               	incf	___awmod@counter,f,c
  1214  00127C                     l1648:
  1215  00127C  AE04               	btfss	___awmod@divisor+1,7,c
  1216  00127E  D7FA               	goto	l1646
  1217  001280                     u940:
  1218  001280  5003               	movf	___awmod@divisor,w,c
  1219  001282  5C01               	subwf	___awmod@dividend,w,c
  1220  001284  5004               	movf	___awmod@divisor+1,w,c
  1221  001286  5802               	subwfb	___awmod@dividend+1,w,c
  1222  001288  E304               	bnc	l1654
  1223  00128A  5003               	movf	___awmod@divisor,w,c
  1224  00128C  5E01               	subwf	___awmod@dividend,f,c
  1225  00128E  5004               	movf	___awmod@divisor+1,w,c
  1226  001290  5A02               	subwfb	___awmod@dividend+1,f,c
  1227  001292                     l1654:
  1228  001292  90D8               	bcf	status,0,c
  1229  001294  3204               	rrcf	___awmod@divisor+1,f,c
  1230  001296  3203               	rrcf	___awmod@divisor,f,c
  1231  001298  2E05               	decfsz	___awmod@counter,f,c
  1232  00129A  D7F2               	goto	u940
  1233  00129C                     l1658:
  1234  00129C  5006               	movf	___awmod@sign,w,c
  1235  00129E  E004               	bz	l1662
  1236  0012A0  6C01               	negf	___awmod@dividend,c
  1237  0012A2  1E02               	comf	___awmod@dividend+1,f,c
  1238  0012A4  B0D8               	btfsc	status,0,c
  1239  0012A6  2A02               	incf	___awmod@dividend+1,f,c
  1240  0012A8                     l1662:
  1241  0012A8  C001  F001         	movff	___awmod@dividend,?___awmod
  1242  0012AC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1243  0012B0  0012               	return		;funcret
  1244  0012B2                     __end_of___awmod:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           prodh	equ	0xFF4
  1251                           prodl	equ	0xFF3
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           indf2	equ	0xFDF
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function ___awdiv *****************
  1260 ;; Defined at:
  1261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  dividend        2    0[COMRAM] int 
  1264 ;;  divisor         2    2[COMRAM] int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  quotient        2    6[COMRAM] int 
  1267 ;;  sign            1    5[COMRAM] unsigned char 
  1268 ;;  counter         1    4[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2    0[COMRAM] int 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1278 ;;      Params:         4       0       0       0       0       0       0       0       0
  1279 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1281 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1282 ;;Total ram usage:        8 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_Dec2BCD
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text5
  1292  0011D2                     __ptext5:
  1293                           	opt stack 0
  1294  0011D2                     ___awdiv:
  1295                           	opt stack 28
  1296                           
  1297                           ;incstack = 0
  1298  0011D2  6A06               	clrf	___awdiv@sign,c
  1299  0011D4  AE04               	btfss	___awdiv@divisor+1,7,c
  1300  0011D6  D006               	goto	l1594
  1301  0011D8  6C03               	negf	___awdiv@divisor,c
  1302  0011DA  1E04               	comf	___awdiv@divisor+1,f,c
  1303  0011DC  B0D8               	btfsc	status,0,c
  1304  0011DE  2A04               	incf	___awdiv@divisor+1,f,c
  1305  0011E0  0E01               	movlw	1
  1306  0011E2  6E06               	movwf	___awdiv@sign,c
  1307  0011E4                     l1594:
  1308  0011E4  AE02               	btfss	___awdiv@dividend+1,7,c
  1309  0011E6  D006               	goto	l1600
  1310  0011E8  6C01               	negf	___awdiv@dividend,c
  1311  0011EA  1E02               	comf	___awdiv@dividend+1,f,c
  1312  0011EC  B0D8               	btfsc	status,0,c
  1313  0011EE  2A02               	incf	___awdiv@dividend+1,f,c
  1314  0011F0  0E01               	movlw	1
  1315  0011F2  1A06               	xorwf	___awdiv@sign,f,c
  1316  0011F4                     l1600:
  1317  0011F4  6A07               	clrf	___awdiv@quotient,c
  1318  0011F6  6A08               	clrf	___awdiv@quotient+1,c
  1319  0011F8  5003               	movf	___awdiv@divisor,w,c
  1320  0011FA  1004               	iorwf	___awdiv@divisor+1,w,c
  1321  0011FC  E01B               	bz	l1622
  1322  0011FE  0E01               	movlw	1
  1323  001200  6E05               	movwf	___awdiv@counter,c
  1324  001202  D004               	goto	l1608
  1325  001204                     l1606:
  1326  001204  90D8               	bcf	status,0,c
  1327  001206  3603               	rlcf	___awdiv@divisor,f,c
  1328  001208  3604               	rlcf	___awdiv@divisor+1,f,c
  1329  00120A  2A05               	incf	___awdiv@counter,f,c
  1330  00120C                     l1608:
  1331  00120C  AE04               	btfss	___awdiv@divisor+1,7,c
  1332  00120E  D7FA               	goto	l1606
  1333  001210                     u880:
  1334  001210  90D8               	bcf	status,0,c
  1335  001212  3607               	rlcf	___awdiv@quotient,f,c
  1336  001214  3608               	rlcf	___awdiv@quotient+1,f,c
  1337  001216  5003               	movf	___awdiv@divisor,w,c
  1338  001218  5C01               	subwf	___awdiv@dividend,w,c
  1339  00121A  5004               	movf	___awdiv@divisor+1,w,c
  1340  00121C  5802               	subwfb	___awdiv@dividend+1,w,c
  1341  00121E  E305               	bnc	l1618
  1342  001220  5003               	movf	___awdiv@divisor,w,c
  1343  001222  5E01               	subwf	___awdiv@dividend,f,c
  1344  001224  5004               	movf	___awdiv@divisor+1,w,c
  1345  001226  5A02               	subwfb	___awdiv@dividend+1,f,c
  1346  001228  8007               	bsf	___awdiv@quotient,0,c
  1347  00122A                     l1618:
  1348  00122A  90D8               	bcf	status,0,c
  1349  00122C  3204               	rrcf	___awdiv@divisor+1,f,c
  1350  00122E  3203               	rrcf	___awdiv@divisor,f,c
  1351  001230  2E05               	decfsz	___awdiv@counter,f,c
  1352  001232  D7EE               	goto	u880
  1353  001234                     l1622:
  1354  001234  5006               	movf	___awdiv@sign,w,c
  1355  001236  E004               	bz	l1626
  1356  001238  6C07               	negf	___awdiv@quotient,c
  1357  00123A  1E08               	comf	___awdiv@quotient+1,f,c
  1358  00123C  B0D8               	btfsc	status,0,c
  1359  00123E  2A08               	incf	___awdiv@quotient+1,f,c
  1360  001240                     l1626:
  1361  001240  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1362  001244  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1363  001248  0012               	return		;funcret
  1364  00124A                     __end_of___awdiv:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _OpenUSART *****************
  1380 ;; Defined at:
  1381 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uopen.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  config          1    wreg     unsigned char 
  1384 ;;  spbrg           2    0[COMRAM] unsigned int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  config          1    2[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         2       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:        3 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text6
  1410  001370                     __ptext6:
  1411                           	opt stack 0
  1412  001370                     _OpenUSART:
  1413                           	opt stack 30
  1414                           
  1415                           ;incstack = 0
  1416                           ;OpenUSART@config stored from wreg
  1417  001370  6E03               	movwf	OpenUSART@config,c
  1418  001372  6AAC               	clrf	4012,c	;volatile
  1419  001374  6AAB               	clrf	4011,c	;volatile
  1420  001376  B003               	btfsc	OpenUSART@config,0,c
  1421  001378  88AC               	bsf	4012,4,c	;volatile
  1422  00137A  A203               	btfss	OpenUSART@config,1,c
  1423  00137C  D002               	goto	l1894
  1424  00137E  8CAC               	bsf	4012,6,c	;volatile
  1425  001380  8CAB               	bsf	4011,6,c	;volatile
  1426  001382                     l1894:
  1427  001382  B403               	btfsc	OpenUSART@config,2,c
  1428  001384  8EAC               	bsf	4012,7,c	;volatile
  1429  001386  A603               	btfss	OpenUSART@config,3,c
  1430  001388  D002               	goto	l232
  1431  00138A  88AB               	bsf	4011,4,c	;volatile
  1432  00138C  D001               	goto	l1902
  1433  00138E                     l232:
  1434  00138E  8AAB               	bsf	4011,5,c	;volatile
  1435  001390                     l1902:
  1436  001390  B803               	btfsc	OpenUSART@config,4,c
  1437  001392  84AC               	bsf	4012,2,c	;volatile
  1438  001394  989E               	bcf	3998,4,c	;volatile
  1439  001396  BA03               	btfsc	OpenUSART@config,5,c
  1440  001398  86AB               	bsf	4011,3,c	;volatile
  1441  00139A  AC03               	btfss	OpenUSART@config,6,c
  1442  00139C  D002               	goto	l236
  1443  00139E  8A9D               	bsf	3997,5,c	;volatile
  1444  0013A0  D001               	goto	l237
  1445  0013A2                     l236:
  1446  0013A2  9A9D               	bcf	3997,5,c	;volatile
  1447  0013A4                     l237:
  1448  0013A4  9A9E               	bcf	3998,5,c	;volatile
  1449  0013A6  AE03               	btfss	OpenUSART@config,7,c
  1450  0013A8  D002               	goto	l238
  1451  0013AA  889D               	bsf	3997,4,c	;volatile
  1452  0013AC  D001               	goto	l239
  1453  0013AE                     l238:
  1454  0013AE  989D               	bcf	3997,4,c	;volatile
  1455  0013B0                     l239:
  1456  0013B0  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1457  0013B4  C002  FFB0         	movff	OpenUSART@spbrg+1,4016	;volatile
  1458  0013B8  8AAC               	bsf	4012,5,c	;volatile
  1459  0013BA  8EAB               	bsf	4011,7,c	;volatile
  1460  0013BC  9C94               	bcf	3988,6,c	;volatile
  1461  0013BE  8E94               	bsf	3988,7,c	;volatile
  1462  0013C0  B8AC               	btfsc	4012,4,c	;volatile
  1463  0013C2  BEAC               	btfsc	4012,7,c	;volatile
  1464  0013C4  0012               	return	
  1465  0013C6  8C94               	bsf	3988,6,c	;volatile
  1466  0013C8  0012               	return		;funcret
  1467  0013CA                     __end_of_OpenUSART:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           prodh	equ	0xFF4
  1474                           prodl	equ	0xFF3
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8
  1481                           
  1482 ;; *************** function _OpenI2C *****************
  1483 ;; Defined at:
  1484 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_open.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  sync_mode       1    wreg     unsigned char 
  1487 ;;  slew            1    0[COMRAM] unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1499 ;;      Params:         1       0       0       0       0       0       0       0       0
  1500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1502 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text7
  1513  00156A                     __ptext7:
  1514                           	opt stack 0
  1515  00156A                     _OpenI2C:
  1516                           	opt stack 30
  1517                           
  1518                           ;incstack = 0
  1519                           ;OpenI2C@sync_mode stored from wreg
  1520  00156A  6E02               	movwf	OpenI2C@sync_mode,c
  1521  00156C  0E3F               	movlw	63
  1522  00156E  16C7               	andwf	4039,f,c	;volatile
  1523  001570  6AC6               	clrf	4038,c	;volatile
  1524  001572  6AC5               	clrf	4037,c	;volatile
  1525  001574  5002               	movf	OpenI2C@sync_mode,w,c
  1526  001576  12C6               	iorwf	4038,f,c	;volatile
  1527  001578  5001               	movf	OpenI2C@slew,w,c
  1528  00157A  12C7               	iorwf	4039,f,c	;volatile
  1529  00157C  8293               	bsf	3987,1,c	;volatile
  1530  00157E  8093               	bsf	3987,0,c	;volatile
  1531  001580  8AC6               	bsf	4038,5,c	;volatile
  1532  001582  0012               	return		;funcret
  1533  001584                     __end_of_OpenI2C:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           prodh	equ	0xFF4
  1540                           prodl	equ	0xFF3
  1541                           postinc0	equ	0xFEE
  1542                           wreg	equ	0xFE8
  1543                           indf2	equ	0xFDF
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _Leer_Pulsador *****************
  1549 ;; Defined at:
  1550 ;;		line 115 in file "main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		_Lcd_Cmd
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text8
  1579  0014E4                     __ptext8:
  1580                           	opt stack 0
  1581  0014E4                     _Leer_Pulsador:
  1582                           	opt stack 29
  1583                           
  1584                           ;main.c: 116: if (PORTDbits.RD1==1){
  1585                           
  1586                           ;incstack = 0
  1587  0014E4  A283               	btfss	3971,1,c	;volatile
  1588  0014E6  0012               	return	
  1589                           
  1590                           ;main.c: 117: Salir=1;
  1591  0014E8  6A34               	clrf	_Salir+1,c
  1592  0014EA  0E01               	movlw	1
  1593  0014EC  6E33               	movwf	_Salir,c
  1594                           
  1595                           ;main.c: 118: while(Salir==1){
  1596  0014EE  D010               	goto	l1500
  1597  0014F0                     l204:
  1598                           
  1599                           ;main.c: 119: if (PORTDbits.RD1==0){
  1600  0014F0  B283               	btfsc	3971,1,c	;volatile
  1601  0014F2  D00E               	goto	l1500
  1602                           
  1603                           ;main.c: 120: Menu++;
  1604  0014F4  4A35               	infsnz	_Menu,f,c
  1605  0014F6  2A36               	incf	_Menu+1,f,c
  1606                           
  1607                           ;main.c: 121: Salir=0;
  1608  0014F8  6A33               	clrf	_Salir,c
  1609  0014FA  6A34               	clrf	_Salir+1,c
  1610                           
  1611                           ;main.c: 122: if (Menu==3){
  1612  0014FC  0E03               	movlw	3
  1613  0014FE  1835               	xorwf	_Menu,w,c
  1614  001500  1036               	iorwf	_Menu+1,w,c
  1615  001502  E103               	bnz	l1498
  1616                           
  1617                           ;main.c: 123: Menu=1;
  1618  001504  6A36               	clrf	_Menu+1,c
  1619  001506  0E01               	movlw	1
  1620  001508  6E35               	movwf	_Menu,c
  1621  00150A                     l1498:
  1622                           
  1623                           ;main.c: 124: }
  1624                           ;main.c: 125: Lcd_Cmd(1);
  1625  00150A  0E01               	movlw	1
  1626  00150C  ECD1  F006         	call	_Lcd_Cmd
  1627  001510                     l1500:
  1628  001510  0433               	decf	_Salir,w,c
  1629  001512  1034               	iorwf	_Salir+1,w,c
  1630  001514  E0ED               	bz	l204
  1631  001516  0012               	return		;funcret
  1632  001518                     __end_of_Leer_Pulsador:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           prodh	equ	0xFF4
  1639                           prodl	equ	0xFF3
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _Lcd_Init *****************
  1648 ;; Defined at:
  1649 ;;		line 52 in file "flex_lcd.h"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  data            1    4[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1663 ;;      Params:         0       0       0       0       0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1665 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1666 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		_Lcd_Cmd
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text9
  1678  000BA6                     __ptext9:
  1679                           	opt stack 0
  1680  000BA6                     _Lcd_Init:
  1681                           	opt stack 29
  1682                           
  1683                           ;flex_lcd.h: 53: unsigned char data;
  1684                           ;flex_lcd.h: 54: TRISDbits.TRISD7 = 0;
  1685                           
  1686                           ;incstack = 0
  1687  000BA6  9E95               	bcf	3989,7,c	;volatile
  1688                           
  1689                           ;flex_lcd.h: 55: TRISDbits.TRISD6 = 0;
  1690  000BA8  9C95               	bcf	3989,6,c	;volatile
  1691                           
  1692                           ;flex_lcd.h: 56: TRISDbits.TRISD5 = 0;
  1693  000BAA  9A95               	bcf	3989,5,c	;volatile
  1694                           
  1695                           ;flex_lcd.h: 57: TRISDbits.TRISD4 = 0;
  1696  000BAC  9895               	bcf	3989,4,c	;volatile
  1697                           
  1698                           ;flex_lcd.h: 58: TRISDbits.TRISD3 = 0;
  1699  000BAE  9695               	bcf	3989,3,c	;volatile
  1700                           
  1701                           ;flex_lcd.h: 59: TRISDbits.TRISD2 = 0;
  1702  000BB0  9495               	bcf	3989,2,c	;volatile
  1703                           
  1704                           ;flex_lcd.h: 60: PORTDbits.RD7 = 0;
  1705  000BB2  9E83               	bcf	3971,7,c	;volatile
  1706                           
  1707                           ;flex_lcd.h: 61: PORTDbits.RD6 = 0;
  1708  000BB4  9C83               	bcf	3971,6,c	;volatile
  1709                           
  1710                           ;flex_lcd.h: 62: PORTDbits.RD5 = 0;
  1711  000BB6  9A83               	bcf	3971,5,c	;volatile
  1712                           
  1713                           ;flex_lcd.h: 63: PORTDbits.RD4 = 0;
  1714  000BB8  9883               	bcf	3971,4,c	;volatile
  1715                           
  1716                           ;flex_lcd.h: 64: PORTDbits.RD3 = 0;
  1717  000BBA  9683               	bcf	3971,3,c	;volatile
  1718                           
  1719                           ;flex_lcd.h: 65: PORTDbits.RD2 = 0;
  1720  000BBC  9483               	bcf	3971,2,c	;volatile
  1721                           
  1722                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1723  000BBE  0E1D               	movlw	29
  1724  000BC0  6E04               	movwf	??_Lcd_Init& (0+255),c
  1725  000BC2  0E91               	movlw	145
  1726  000BC4                     u1277:
  1727  000BC4  2EE8               	decfsz	wreg,f,c
  1728  000BC6  D7FE               	bra	u1277
  1729  000BC8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1730  000BCA  D7FC               	bra	u1277
  1731  000BCC  F000               	nop	
  1732                           
  1733                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1734  000BCE  0E1D               	movlw	29
  1735  000BD0  6E04               	movwf	??_Lcd_Init& (0+255),c
  1736  000BD2  0E91               	movlw	145
  1737  000BD4                     u1287:
  1738  000BD4  2EE8               	decfsz	wreg,f,c
  1739  000BD6  D7FE               	bra	u1287
  1740  000BD8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1741  000BDA  D7FC               	bra	u1287
  1742  000BDC  F000               	nop	
  1743                           
  1744                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1745  000BDE  0E1D               	movlw	29
  1746  000BE0  6E04               	movwf	??_Lcd_Init& (0+255),c
  1747  000BE2  0E91               	movlw	145
  1748  000BE4                     u1297:
  1749  000BE4  2EE8               	decfsz	wreg,f,c
  1750  000BE6  D7FE               	bra	u1297
  1751  000BE8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1752  000BEA  D7FC               	bra	u1297
  1753  000BEC  F000               	nop	
  1754                           
  1755                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1756  000BEE  0E1D               	movlw	29
  1757  000BF0  6E04               	movwf	??_Lcd_Init& (0+255),c
  1758  000BF2  0E91               	movlw	145
  1759  000BF4                     u1307:
  1760  000BF4  2EE8               	decfsz	wreg,f,c
  1761  000BF6  D7FE               	bra	u1307
  1762  000BF8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1763  000BFA  D7FC               	bra	u1307
  1764  000BFC  F000               	nop	
  1765                           
  1766                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1767  000BFE  0E1D               	movlw	29
  1768  000C00  6E04               	movwf	??_Lcd_Init& (0+255),c
  1769  000C02  0E91               	movlw	145
  1770  000C04                     u1317:
  1771  000C04  2EE8               	decfsz	wreg,f,c
  1772  000C06  D7FE               	bra	u1317
  1773  000C08  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1774  000C0A  D7FC               	bra	u1317
  1775  000C0C  F000               	nop	
  1776                           
  1777                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1778  000C0E  0E1D               	movlw	29
  1779  000C10  6E04               	movwf	??_Lcd_Init& (0+255),c
  1780  000C12  0E91               	movlw	145
  1781  000C14                     u1327:
  1782  000C14  2EE8               	decfsz	wreg,f,c
  1783  000C16  D7FE               	bra	u1327
  1784  000C18  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1785  000C1A  D7FC               	bra	u1327
  1786  000C1C  F000               	nop	
  1787                           
  1788                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  1789  000C1E  0E01               	movlw	1
  1790  000C20  6E05               	movwf	Lcd_Init@data,c
  1791  000C22                     l91:
  1792                           
  1793                           ;flex_lcd.h: 73: {
  1794                           ;flex_lcd.h: 74: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTDbits.RD3 = 0;
  1795  000C22  D83E               	call	PL48	;call to abstracted procedure
  1796  000C24  9683               	bcf	3971,3,c	;volatile
  1797                           
  1798                           ;flex_lcd.h: 75: PORTDbits.RD2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 
      +                          = 1; PORTDbits.RD4 = 1;
  1799  000C26  9483               	bcf	3971,2,c	;volatile
  1800  000C28  D83B               	call	PL48	;call to abstracted procedure
  1801                           
  1802                           ;flex_lcd.h: 76: PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  1803  000C2A  8683               	bsf	3971,3,c	;volatile
  1804  000C2C  9483               	bcf	3971,2,c	;volatile
  1805                           
  1806                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(16000000/4000000.0)));
  1807  000C2E  0E06               	movlw	6
  1808  000C30                     u1337:
  1809  000C30  2EE8               	decfsz	wreg,f,c
  1810  000C32  D7FE               	bra	u1337
  1811  000C34  D000               	nop2	
  1812                           
  1813                           ;flex_lcd.h: 78: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTDbits.RD3 = 0;
  1814  000C36  D834               	call	PL48	;call to abstracted procedure
  1815  000C38  9683               	bcf	3971,3,c	;volatile
  1816                           
  1817                           ;flex_lcd.h: 79: PORTDbits.RD2 = 0;
  1818  000C3A  9483               	bcf	3971,2,c	;volatile
  1819                           
  1820                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1821  000C3C  0E1D               	movlw	29
  1822  000C3E  6E04               	movwf	??_Lcd_Init& (0+255),c
  1823  000C40  0E91               	movlw	145
  1824  000C42                     u1347:
  1825  000C42  2EE8               	decfsz	wreg,f,c
  1826  000C44  D7FE               	bra	u1347
  1827  000C46  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1828  000C48  D7FC               	bra	u1347
  1829  000C4A  F000               	nop	
  1830  000C4C  2A05               	incf	Lcd_Init@data,f,c
  1831  000C4E  0E03               	movlw	3
  1832  000C50  6405               	cpfsgt	Lcd_Init@data,c
  1833  000C52  D7E7               	goto	l91
  1834                           
  1835                           ;flex_lcd.h: 81: }
  1836                           ;flex_lcd.h: 82: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  1837  000C54  D820               	call	PL46	;call to abstracted procedure
  1838  000C56  9683               	bcf	3971,3,c	;volatile
  1839  000C58  9483               	bcf	3971,2,c	;volatile
  1840                           
  1841                           ;flex_lcd.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTDbits.RD3 = 1; PORTDbits.RD2 = 0;
  1842  000C5A  D81D               	call	PL46	;call to abstracted procedure
  1843  000C5C  8683               	bsf	3971,3,c	;volatile
  1844  000C5E  9483               	bcf	3971,2,c	;volatile
  1845                           
  1846                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(16000000/4000000.0)));
  1847  000C60  0E06               	movlw	6
  1848  000C62                     u1357:
  1849  000C62  2EE8               	decfsz	wreg,f,c
  1850  000C64  D7FE               	bra	u1357
  1851  000C66  D000               	nop2	
  1852                           
  1853                           ;flex_lcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  1854  000C68  D816               	call	PL46	;call to abstracted procedure
  1855  000C6A  9683               	bcf	3971,3,c	;volatile
  1856  000C6C  9483               	bcf	3971,2,c	;volatile
  1857                           
  1858                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1859  000C6E  0E1D               	movlw	29
  1860  000C70  6E04               	movwf	??_Lcd_Init& (0+255),c
  1861  000C72  0E91               	movlw	145
  1862  000C74                     u1367:
  1863  000C74  2EE8               	decfsz	wreg,f,c
  1864  000C76  D7FE               	bra	u1367
  1865  000C78  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1866  000C7A  D7FC               	bra	u1367
  1867  000C7C  F000               	nop	
  1868  000C7E  0E28               	movlw	40
  1869  000C80  ECD1  F006         	call	_Lcd_Cmd
  1870  000C84  0E10               	movlw	16
  1871  000C86  ECD1  F006         	call	_Lcd_Cmd
  1872  000C8A  0E01               	movlw	1
  1873  000C8C  ECD1  F006         	call	_Lcd_Cmd
  1874  000C90  0E0F               	movlw	15
  1875  000C92  EFD1  F006         	goto	_Lcd_Cmd
  1876  000C96                     __end_of_Lcd_Init:
  1877                           	opt stack 0
  1878  000C96                     PL46:
  1879                           	opt stack 29
  1880  000C96  9E83               	bcf	3971,7,c	;volatile
  1881  000C98  9C83               	bcf	3971,6,c	;volatile
  1882  000C9A  8A83               	bsf	3971,5,c	;volatile
  1883  000C9C  9883               	bcf	3971,4,c	;volatile
  1884  000C9E  0012               	return	
  1885  000CA0                     __end_ofPL46:
  1886                           	opt stack 0
  1887  000CA0                     PL48:
  1888                           	opt stack 29
  1889  000CA0  9E83               	bcf	3971,7,c	;volatile
  1890  000CA2  9C83               	bcf	3971,6,c	;volatile
  1891  000CA4  8A83               	bsf	3971,5,c	;volatile
  1892  000CA6  8883               	bsf	3971,4,c	;volatile
  1893  000CA8  0012               	return	
  1894  000CAA                     __end_ofPL48:
  1895                           	opt stack 0
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           prodh	equ	0xFF4
  1901                           prodl	equ	0xFF3
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           indf2	equ	0xFDF
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _DS1307 *****************
  1910 ;; Defined at:
  1911 ;;		line 4 in file "I2C_DS1307.h"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    3
  1932 ;; This function calls:
  1933 ;;		_BCD2Dec
  1934 ;;		_Lcd_Out2
  1935 ;;		___lwdiv
  1936 ;;		___lwmod
  1937 ;;		_dia_semana
  1938 ;;		_leer_DS1307
  1939 ;;		_putsUSART
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text10
  1946  000892                     __ptext10:
  1947                           	opt stack 0
  1948  000892                     _DS1307:
  1949                           	opt stack 0
  1950                           
  1951                           ;incstack = 0
  1952  000892  D96C               	call	PL8	;call to abstracted procedure
  1953  000894  0E02               	movlw	2
  1954  000896  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  1955  000898  EC8A  F009         	call	_leer_DS1307	;wreg free
  1956  00089C  C003  F02D         	movff	?_leer_DS1307,_Hours
  1957  0008A0  C004  F02E         	movff	?_leer_DS1307+1,_Hours+1
  1958                           
  1959                           ;I2C_DS1307.h: 6: Hours=BCD2Dec(Hours);
  1960  0008A4  C02D  F007         	movff	_Hours,BCD2Dec@Temp_3
  1961  0008A8  C02E  F008         	movff	_Hours+1,BCD2Dec@Temp_3+1
  1962  0008AC  EC59  F009         	call	_BCD2Dec	;wreg free
  1963  0008B0  C007  F02D         	movff	?_BCD2Dec,_Hours
  1964  0008B4  C008  F02E         	movff	?_BCD2Dec+1,_Hours+1
  1965  0008B8  D959               	call	PL8	;call to abstracted procedure
  1966  0008BA  0E01               	movlw	1
  1967  0008BC  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  1968  0008BE  EC8A  F009         	call	_leer_DS1307	;wreg free
  1969  0008C2  C003  F02F         	movff	?_leer_DS1307,_Minutes
  1970  0008C6  C004  F030         	movff	?_leer_DS1307+1,_Minutes+1
  1971                           
  1972                           ;I2C_DS1307.h: 8: Minutes=BCD2Dec(Minutes);
  1973  0008CA  C02F  F007         	movff	_Minutes,BCD2Dec@Temp_3
  1974  0008CE  C030  F008         	movff	_Minutes+1,BCD2Dec@Temp_3+1
  1975  0008D2  EC59  F009         	call	_BCD2Dec	;wreg free
  1976  0008D6  C007  F02F         	movff	?_BCD2Dec,_Minutes
  1977  0008DA  C008  F030         	movff	?_BCD2Dec+1,_Minutes+1
  1978  0008DE  D946               	call	PL8	;call to abstracted procedure
  1979  0008E0  6A05               	clrf	leer_DS1307@dirrecion_memoria,c
  1980  0008E2  EC8A  F009         	call	_leer_DS1307	;wreg free
  1981  0008E6  C003  F031         	movff	?_leer_DS1307,_Seconds
  1982  0008EA  C004  F032         	movff	?_leer_DS1307+1,_Seconds+1
  1983                           
  1984                           ;I2C_DS1307.h: 10: Seconds=BCD2Dec(Seconds);
  1985  0008EE  C031  F007         	movff	_Seconds,BCD2Dec@Temp_3
  1986  0008F2  C032  F008         	movff	_Seconds+1,BCD2Dec@Temp_3+1
  1987  0008F6  EC59  F009         	call	_BCD2Dec	;wreg free
  1988  0008FA  C007  F031         	movff	?_BCD2Dec,_Seconds
  1989  0008FE  C008  F032         	movff	?_BCD2Dec+1,_Seconds+1
  1990  000902  D934               	call	PL8	;call to abstracted procedure
  1991  000904  0E05               	movlw	5
  1992  000906  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  1993  000908  EC8A  F009         	call	_leer_DS1307	;wreg free
  1994  00090C  C003  F027         	movff	?_leer_DS1307,_Month
  1995  000910  C004  F028         	movff	?_leer_DS1307+1,_Month+1
  1996                           
  1997                           ;I2C_DS1307.h: 13: Month=BCD2Dec(Month);
  1998  000914  C027  F007         	movff	_Month,BCD2Dec@Temp_3
  1999  000918  C028  F008         	movff	_Month+1,BCD2Dec@Temp_3+1
  2000  00091C  EC59  F009         	call	_BCD2Dec	;wreg free
  2001  000920  C007  F027         	movff	?_BCD2Dec,_Month
  2002  000924  C008  F028         	movff	?_BCD2Dec+1,_Month+1
  2003  000928  D921               	call	PL8	;call to abstracted procedure
  2004  00092A  0E04               	movlw	4
  2005  00092C  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  2006  00092E  EC8A  F009         	call	_leer_DS1307	;wreg free
  2007  000932  C003  F029         	movff	?_leer_DS1307,_Date
  2008  000936  C004  F02A         	movff	?_leer_DS1307+1,_Date+1
  2009                           
  2010                           ;I2C_DS1307.h: 15: Date=BCD2Dec(Date);
  2011  00093A  C029  F007         	movff	_Date,BCD2Dec@Temp_3
  2012  00093E  C02A  F008         	movff	_Date+1,BCD2Dec@Temp_3+1
  2013  000942  EC59  F009         	call	_BCD2Dec	;wreg free
  2014  000946  C007  F029         	movff	?_BCD2Dec,_Date
  2015  00094A  C008  F02A         	movff	?_BCD2Dec+1,_Date+1
  2016  00094E  D90E               	call	PL8	;call to abstracted procedure
  2017  000950  0E06               	movlw	6
  2018  000952  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  2019  000954  EC8A  F009         	call	_leer_DS1307	;wreg free
  2020  000958  C003  F025         	movff	?_leer_DS1307,_Year
  2021  00095C  C004  F026         	movff	?_leer_DS1307+1,_Year+1
  2022                           
  2023                           ;I2C_DS1307.h: 17: Year=BCD2Dec(Year);
  2024  000960  C025  F007         	movff	_Year,BCD2Dec@Temp_3
  2025  000964  C026  F008         	movff	_Year+1,BCD2Dec@Temp_3+1
  2026  000968  EC59  F009         	call	_BCD2Dec	;wreg free
  2027  00096C  C007  F025         	movff	?_BCD2Dec,_Year
  2028  000970  C008  F026         	movff	?_BCD2Dec+1,_Year+1
  2029  000974  D8FB               	call	PL8	;call to abstracted procedure
  2030  000976  0E03               	movlw	3
  2031  000978  6E05               	movwf	leer_DS1307@dirrecion_memoria,c
  2032  00097A  EC8A  F009         	call	_leer_DS1307	;wreg free
  2033  00097E  C003  F02B         	movff	?_leer_DS1307,_Day
  2034  000982  C004  F02C         	movff	?_leer_DS1307+1,_Day+1
  2035                           
  2036                           ;I2C_DS1307.h: 20: Day=BCD2Dec(Day);
  2037  000986  C02B  F007         	movff	_Day,BCD2Dec@Temp_3
  2038  00098A  C02C  F008         	movff	_Day+1,BCD2Dec@Temp_3+1
  2039  00098E  EC59  F009         	call	_BCD2Dec	;wreg free
  2040  000992  C007  F02B         	movff	?_BCD2Dec,_Day
  2041  000996  C008  F02C         	movff	?_BCD2Dec+1,_Day+1
  2042                           
  2043                           ;I2C_DS1307.h: 22: if(Hours==0){
  2044  00099A  502D               	movf	_Hours,w,c
  2045  00099C  102E               	iorwf	_Hours+1,w,c
  2046  00099E  E106               	bnz	l1806
  2047                           
  2048                           ;I2C_DS1307.h: 23: meridiano = " AM";
  2049  0009A0  0E79               	movlw	low STR_1
  2050  0009A2  D8ED               	call	PL50	;call to abstracted procedure
  2051                           
  2052                           ;I2C_DS1307.h: 24: Hours=12;
  2053  0009A4  0E00               	movlw	0
  2054  0009A6  6E2E               	movwf	_Hours+1,c
  2055  0009A8  0E0C               	movlw	12
  2056  0009AA  6E2D               	movwf	_Hours,c
  2057  0009AC                     l1806:
  2058                           
  2059                           ;I2C_DS1307.h: 25: }
  2060                           ;I2C_DS1307.h: 26: if(Hours>12){
  2061  0009AC  502E               	movf	_Hours+1,w,c
  2062  0009AE  E103               	bnz	u1120
  2063  0009B0  0E0D               	movlw	13
  2064  0009B2  5C2D               	subwf	_Hours,w,c
  2065  0009B4  E306               	bnc	l1810
  2066  0009B6                     u1120:
  2067                           
  2068                           ;I2C_DS1307.h: 27: Hours=Hours-12;
  2069  0009B6  0EF4               	movlw	244
  2070  0009B8  262D               	addwf	_Hours,f,c
  2071  0009BA  0EFF               	movlw	255
  2072  0009BC  222E               	addwfc	_Hours+1,f,c
  2073                           
  2074                           ;I2C_DS1307.h: 28: meridiano = " PM";
  2075  0009BE  0E81               	movlw	low STR_2
  2076  0009C0  D001               	goto	L1
  2077  0009C2                     l1810:
  2078                           
  2079                           ;I2C_DS1307.h: 30: else{
  2080                           ;I2C_DS1307.h: 31: meridiano = " AM";
  2081  0009C2  0E79               	movlw	low STR_1
  2082  0009C4                     L1:
  2083  0009C4  D8DC               	call	PL50	;call to abstracted procedure
  2084                           
  2085                           ;I2C_DS1307.h: 32: }
  2086                           ;I2C_DS1307.h: 34: txt_DS1307[0] = (Hours/10)%10 + 48;
  2087  0009C6  6A04               	clrf	___lwdiv@divisor+1,c
  2088  0009C8  0E0A               	movlw	10
  2089  0009CA  6E03               	movwf	___lwdiv@divisor,c
  2090  0009CC  C02D  F001         	movff	_Hours,___lwdiv@dividend
  2091  0009D0  C02E  F002         	movff	_Hours+1,___lwdiv@dividend+1
  2092  0009D4  EC0C  F00A         	call	___lwdiv	;wreg free
  2093  0009D8  D8C1               	call	PL2	;call to abstracted procedure
  2094  0009DA  EC53  F00A         	call	___lwmod	;wreg free
  2095  0009DE  5008               	movf	?___lwmod,w,c
  2096  0009E0  0F30               	addlw	48
  2097  0009E2  6E3A               	movwf	_txt_DS1307,c
  2098                           
  2099                           ;I2C_DS1307.h: 35: txt_DS1307[1] = (Hours/1)%10 + 48;
  2100  0009E4  C02D  F008         	movff	_Hours,___lwmod@dividend
  2101  0009E8  C02E  F009         	movff	_Hours+1,___lwmod@dividend+1
  2102  0009EC  D8C4               	call	PL32	;call to abstracted procedure
  2103  0009EE  EC53  F00A         	call	___lwmod	;wreg free
  2104  0009F2  5008               	movf	?___lwmod,w,c
  2105  0009F4  0F30               	addlw	48
  2106  0009F6  6E3B               	movwf	_txt_DS1307+1,c
  2107                           
  2108                           ;I2C_DS1307.h: 36: txt_DS1307[2] = ':';
  2109  0009F8  0E3A               	movlw	58
  2110                           
  2111                           ;I2C_DS1307.h: 37: txt_DS1307[3] = (Minutes/10)%10 + 48;
  2112  0009FA  D8CC               	call	PL54	;call to abstracted procedure
  2113  0009FC  C02F  F001         	movff	_Minutes,___lwdiv@dividend
  2114  000A00  C030  F002         	movff	_Minutes+1,___lwdiv@dividend+1
  2115  000A04  EC0C  F00A         	call	___lwdiv	;wreg free
  2116  000A08  D8A9               	call	PL2	;call to abstracted procedure
  2117  000A0A  EC53  F00A         	call	___lwmod	;wreg free
  2118  000A0E  5008               	movf	?___lwmod,w,c
  2119  000A10  0F30               	addlw	48
  2120  000A12  6E3D               	movwf	_txt_DS1307+3,c
  2121                           
  2122                           ;I2C_DS1307.h: 38: txt_DS1307[4] = (Minutes/1)%10 + 48;
  2123  000A14  C02F  F008         	movff	_Minutes,___lwmod@dividend
  2124  000A18  C030  F009         	movff	_Minutes+1,___lwmod@dividend+1
  2125  000A1C  D8AC               	call	PL32	;call to abstracted procedure
  2126  000A1E  EC53  F00A         	call	___lwmod	;wreg free
  2127  000A22  5008               	movf	?___lwmod,w,c
  2128  000A24  0F30               	addlw	48
  2129  000A26  6E3E               	movwf	_txt_DS1307+4,c
  2130                           
  2131                           ;I2C_DS1307.h: 39: txt_DS1307[5] = ':';
  2132  000A28  0E3A               	movlw	58
  2133  000A2A  6E3F               	movwf	_txt_DS1307+5,c
  2134                           
  2135                           ;I2C_DS1307.h: 40: txt_DS1307[6] = (Seconds/10)%10 + 48;
  2136  000A2C  6A04               	clrf	___lwdiv@divisor+1,c
  2137  000A2E  0E0A               	movlw	10
  2138  000A30  6E03               	movwf	___lwdiv@divisor,c
  2139  000A32  C031  F001         	movff	_Seconds,___lwdiv@dividend
  2140  000A36  C032  F002         	movff	_Seconds+1,___lwdiv@dividend+1
  2141  000A3A  EC0C  F00A         	call	___lwdiv	;wreg free
  2142  000A3E  D88E               	call	PL2	;call to abstracted procedure
  2143  000A40  EC53  F00A         	call	___lwmod	;wreg free
  2144  000A44  5008               	movf	?___lwmod,w,c
  2145  000A46  0F30               	addlw	48
  2146  000A48  6E40               	movwf	_txt_DS1307+6,c
  2147                           
  2148                           ;I2C_DS1307.h: 41: txt_DS1307[7] = (Seconds/1)%10 + 48;
  2149  000A4A  C031  F008         	movff	_Seconds,___lwmod@dividend
  2150  000A4E  C032  F009         	movff	_Seconds+1,___lwmod@dividend+1
  2151  000A52  D891               	call	PL32	;call to abstracted procedure
  2152  000A54  EC53  F00A         	call	___lwmod	;wreg free
  2153  000A58  5008               	movf	?___lwmod,w,c
  2154  000A5A  0F30               	addlw	48
  2155  000A5C  6E41               	movwf	_txt_DS1307+7,c
  2156                           
  2157                           ;I2C_DS1307.h: 42: txt_DS1307[8] = 0x00;
  2158  000A5E  6A42               	clrf	_txt_DS1307+8,c
  2159                           
  2160                           ;I2C_DS1307.h: 43: txt_DS1307[9] = 0x00;
  2161  000A60  6A43               	clrf	_txt_DS1307+9,c
  2162                           
  2163                           ;I2C_DS1307.h: 44: putsUSART(txt_DS1307);
  2164  000A62  D89D               	call	PL56	;call to abstracted procedure
  2165  000A64  ECE5  F009         	call	_putsUSART	;wreg free
  2166                           
  2167                           ;I2C_DS1307.h: 45: putsUSART(meridiano);
  2168  000A68  C037  F002         	movff	_meridiano,putsUSART@data
  2169  000A6C  C038  F003         	movff	_meridiano+1,putsUSART@data+1
  2170  000A70  ECE5  F009         	call	_putsUSART	;wreg free
  2171                           
  2172                           ;I2C_DS1307.h: 46: putsUSART("\r\n");
  2173  000A74  0E8D               	movlw	low STR_4
  2174  000A76  EC5F  F008         	call	PL4	;call to abstracted procedure
  2175  000A7A  ECE5  F009         	call	_putsUSART	;wreg free
  2176                           
  2177                           ;I2C_DS1307.h: 47: Lcd_Out2(1,0,txt_DS1307);
  2178  000A7E  D885               	call	PL52	;call to abstracted procedure
  2179  000A80  0E01               	movlw	1
  2180  000A82  ECAB  F008         	call	_Lcd_Out2
  2181                           
  2182                           ;I2C_DS1307.h: 48: Lcd_Out2(1,10,meridiano);
  2183  000A86  0E0A               	movlw	10
  2184  000A88  6E04               	movwf	Lcd_Out2@x,c
  2185  000A8A  C037  F005         	movff	_meridiano,Lcd_Out2@buffer
  2186  000A8E  C038  F006         	movff	_meridiano+1,Lcd_Out2@buffer+1
  2187  000A92  0E01               	movlw	1
  2188  000A94  ECAB  F008         	call	_Lcd_Out2
  2189                           
  2190                           ;I2C_DS1307.h: 50: txt_DS1307[0] = (Date/10)%10 + 48;
  2191  000A98  6A04               	clrf	___lwdiv@divisor+1,c
  2192  000A9A  0E0A               	movlw	10
  2193  000A9C  6E03               	movwf	___lwdiv@divisor,c
  2194  000A9E  C029  F001         	movff	_Date,___lwdiv@dividend
  2195  000AA2  C02A  F002         	movff	_Date+1,___lwdiv@dividend+1
  2196  000AA6  EC0C  F00A         	call	___lwdiv	;wreg free
  2197  000AAA  D858               	call	PL2	;call to abstracted procedure
  2198  000AAC  EC53  F00A         	call	___lwmod	;wreg free
  2199  000AB0  5008               	movf	?___lwmod,w,c
  2200  000AB2  0F30               	addlw	48
  2201  000AB4  6E3A               	movwf	_txt_DS1307,c
  2202                           
  2203                           ;I2C_DS1307.h: 51: txt_DS1307[1] = (Date/1)%10 + 48;
  2204  000AB6  C029  F008         	movff	_Date,___lwmod@dividend
  2205  000ABA  C02A  F009         	movff	_Date+1,___lwmod@dividend+1
  2206  000ABE  D85B               	call	PL32	;call to abstracted procedure
  2207  000AC0  EC53  F00A         	call	___lwmod	;wreg free
  2208  000AC4  5008               	movf	?___lwmod,w,c
  2209  000AC6  0F30               	addlw	48
  2210  000AC8  6E3B               	movwf	_txt_DS1307+1,c
  2211                           
  2212                           ;I2C_DS1307.h: 52: txt_DS1307[2] = '/';
  2213  000ACA  0E2F               	movlw	47
  2214                           
  2215                           ;I2C_DS1307.h: 53: txt_DS1307[3] = (Month/10)%10 + 48;
  2216  000ACC  D863               	call	PL54	;call to abstracted procedure
  2217  000ACE  C027  F001         	movff	_Month,___lwdiv@dividend
  2218  000AD2  C028  F002         	movff	_Month+1,___lwdiv@dividend+1
  2219  000AD6  EC0C  F00A         	call	___lwdiv	;wreg free
  2220  000ADA  D840               	call	PL2	;call to abstracted procedure
  2221  000ADC  EC53  F00A         	call	___lwmod	;wreg free
  2222  000AE0  5008               	movf	?___lwmod,w,c
  2223  000AE2  0F30               	addlw	48
  2224  000AE4  6E3D               	movwf	_txt_DS1307+3,c
  2225                           
  2226                           ;I2C_DS1307.h: 54: txt_DS1307[4] = (Month/1)%10 + 48;
  2227  000AE6  C027  F008         	movff	_Month,___lwmod@dividend
  2228  000AEA  C028  F009         	movff	_Month+1,___lwmod@dividend+1
  2229  000AEE  D843               	call	PL32	;call to abstracted procedure
  2230  000AF0  EC53  F00A         	call	___lwmod	;wreg free
  2231  000AF4  5008               	movf	?___lwmod,w,c
  2232  000AF6  0F30               	addlw	48
  2233  000AF8  6E3E               	movwf	_txt_DS1307+4,c
  2234                           
  2235                           ;I2C_DS1307.h: 55: txt_DS1307[5] = '/';
  2236  000AFA  0E2F               	movlw	47
  2237  000AFC  6E3F               	movwf	_txt_DS1307+5,c
  2238                           
  2239                           ;I2C_DS1307.h: 56: txt_DS1307[6] = '2';
  2240  000AFE  0E32               	movlw	50
  2241  000B00  6E40               	movwf	_txt_DS1307+6,c
  2242                           
  2243                           ;I2C_DS1307.h: 57: txt_DS1307[7] = '0';
  2244  000B02  0E30               	movlw	48
  2245  000B04  6E41               	movwf	_txt_DS1307+7,c
  2246                           
  2247                           ;I2C_DS1307.h: 58: txt_DS1307[8] = (Year/10)%10 + 48;
  2248  000B06  6A04               	clrf	___lwdiv@divisor+1,c
  2249  000B08  0E0A               	movlw	10
  2250  000B0A  6E03               	movwf	___lwdiv@divisor,c
  2251  000B0C  C025  F001         	movff	_Year,___lwdiv@dividend
  2252  000B10  C026  F002         	movff	_Year+1,___lwdiv@dividend+1
  2253  000B14  EC0C  F00A         	call	___lwdiv	;wreg free
  2254  000B18  D821               	call	PL2	;call to abstracted procedure
  2255  000B1A  EC53  F00A         	call	___lwmod	;wreg free
  2256  000B1E  5008               	movf	?___lwmod,w,c
  2257  000B20  0F30               	addlw	48
  2258  000B22  6E42               	movwf	_txt_DS1307+8,c
  2259                           
  2260                           ;I2C_DS1307.h: 59: txt_DS1307[9] = (Year/1)%10 + 48;
  2261  000B24  C025  F008         	movff	_Year,___lwmod@dividend
  2262  000B28  C026  F009         	movff	_Year+1,___lwmod@dividend+1
  2263  000B2C  D824               	call	PL32	;call to abstracted procedure
  2264  000B2E  EC53  F00A         	call	___lwmod	;wreg free
  2265  000B32  5008               	movf	?___lwmod,w,c
  2266  000B34  0F30               	addlw	48
  2267  000B36  6E43               	movwf	_txt_DS1307+9,c
  2268                           
  2269                           ;I2C_DS1307.h: 60: putsUSART(txt_DS1307);
  2270  000B38  D832               	call	PL56	;call to abstracted procedure
  2271  000B3A  ECE5  F009         	call	_putsUSART	;wreg free
  2272                           
  2273                           ;I2C_DS1307.h: 61: dia_semana(Day);
  2274  000B3E  C02B  F009         	movff	_Day,dia_semana@dia_semana
  2275  000B42  C02C  F00A         	movff	_Day+1,dia_semana@dia_semana+1
  2276  000B46  EC0B  F008         	call	_dia_semana	;wreg free
  2277                           
  2278                           ;I2C_DS1307.h: 62: putsUSART("\r\n");
  2279  000B4A  0E8D               	movlw	low STR_4
  2280  000B4C  EC5F  F008         	call	PL4	;call to abstracted procedure
  2281  000B50  ECE5  F009         	call	_putsUSART	;wreg free
  2282                           
  2283                           ;I2C_DS1307.h: 63: Lcd_Out2(2,0,txt_DS1307);
  2284  000B54  D81A               	call	PL52	;call to abstracted procedure
  2285  000B56  0E02               	movlw	2
  2286  000B58  EFAB  F008         	goto	_Lcd_Out2
  2287  000B5C                     __end_of_DS1307:
  2288                           	opt stack 0
  2289  000B5C                     PL2:
  2290                           	opt stack 27
  2291  000B5C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2292  000B60  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2293  000B64  6A0B               	clrf	___lwmod@divisor+1,c
  2294  000B66  0E0A               	movlw	10
  2295  000B68  6E0A               	movwf	___lwmod@divisor,c
  2296  000B6A  0C0A               	retlw	10
  2297  000B6C                     __end_ofPL2:
  2298                           	opt stack 0
  2299  000B6C                     PL8:
  2300                           	opt stack 27
  2301  000B6C  6A04               	clrf	leer_DS1307@dirrecion_esclavo+1,c
  2302  000B6E  0ED1               	movlw	209
  2303  000B70  6E03               	movwf	leer_DS1307@dirrecion_esclavo,c
  2304  000B72  6A06               	clrf	leer_DS1307@dirrecion_memoria+1,c
  2305  000B74  0CD1               	retlw	209
  2306  000B76                     __end_ofPL8:
  2307                           	opt stack 0
  2308  000B76                     PL32:
  2309                           	opt stack 27
  2310  000B76  6A0B               	clrf	___lwmod@divisor+1,c
  2311  000B78  0E0A               	movlw	10
  2312  000B7A  6E0A               	movwf	___lwmod@divisor,c
  2313  000B7C  0C0A               	retlw	10
  2314  000B7E                     __end_ofPL32:
  2315                           	opt stack 0
  2316  000B7E                     PL50:
  2317                           	opt stack 27
  2318  000B7E  6E37               	movwf	_meridiano,c
  2319  000B80  5037               	movf	_meridiano,w,c
  2320  000B82  A4D8               	btfss	status,2,c
  2321  000B84  0E08               	movlw	high __smallconst
  2322  000B86  6E38               	movwf	_meridiano+1,c
  2323  000B88  0012               	return	
  2324  000B8A                     __end_ofPL50:
  2325                           	opt stack 0
  2326  000B8A                     PL52:
  2327                           	opt stack 27
  2328  000B8A  6A04               	clrf	Lcd_Out2@x,c
  2329  000B8C  0E3A               	movlw	low _txt_DS1307
  2330  000B8E  6E05               	movwf	Lcd_Out2@buffer,c
  2331  000B90  6A06               	clrf	Lcd_Out2@buffer+1,c
  2332  000B92  0012               	return	
  2333  000B94                     __end_ofPL52:
  2334                           	opt stack 0
  2335  000B94                     PL54:
  2336                           	opt stack 27
  2337  000B94  6E3C               	movwf	_txt_DS1307+2,c
  2338  000B96  6A04               	clrf	___lwdiv@divisor+1,c
  2339  000B98  0E0A               	movlw	10
  2340  000B9A  6E03               	movwf	___lwdiv@divisor,c
  2341  000B9C  0C0A               	retlw	10
  2342  000B9E                     __end_ofPL54:
  2343                           	opt stack 0
  2344  000B9E                     PL56:
  2345                           	opt stack 27
  2346  000B9E  0E3A               	movlw	low _txt_DS1307
  2347  000BA0  6E02               	movwf	putsUSART@data,c
  2348  000BA2  6A03               	clrf	putsUSART@data+1,c
  2349  000BA4  0012               	return	
  2350  000BA6                     __end_ofPL56:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           indf2	equ	0xFDF
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _leer_DS1307 *****************
  2366 ;; Defined at:
  2367 ;;		line 79 in file "I2C_DS1307.h"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  dirrecion_es    2    2[COMRAM] unsigned short 
  2370 ;;  dirrecion_me    2    4[COMRAM] unsigned short 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  Data_DS1307     1    6[COMRAM] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    2[COMRAM] unsigned short 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2382 ;;      Params:         4       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        5 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    2
  2389 ;; This function calls:
  2390 ;;		_IdleI2C
  2391 ;;		_ReadI2C
  2392 ;;		_WriteI2C
  2393 ;; This function is called by:
  2394 ;;		_DS1307
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text11
  2399  001314                     __ptext11:
  2400                           	opt stack 0
  2401  001314                     _leer_DS1307:
  2402                           	opt stack 27
  2403                           
  2404                           ;I2C_DS1307.h: 82: char Data_DS1307;
  2405                           ;I2C_DS1307.h: 83: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2406                           
  2407                           ;incstack = 0
  2408  001314  80C5               	bsf	4037,0,c	;volatile
  2409  001316                     l143:
  2410  001316  B0C5               	btfsc	4037,0,c	;volatile
  2411  001318  D7FE               	goto	l143
  2412                           
  2413                           ;I2C_DS1307.h: 84: IdleI2C();
  2414  00131A  ECE3  F00A         	call	_IdleI2C	;wreg free
  2415                           
  2416                           ;I2C_DS1307.h: 85: WriteI2C(dirrecion_esclavo-1);
  2417  00131E  0403               	decf	leer_DS1307@dirrecion_esclavo,w,c
  2418  001320  EC31  F00A         	call	_WriteI2C
  2419                           
  2420                           ;I2C_DS1307.h: 86: IdleI2C();
  2421  001324  ECE3  F00A         	call	_IdleI2C	;wreg free
  2422                           
  2423                           ;I2C_DS1307.h: 87: WriteI2C(dirrecion_memoria);
  2424  001328  5005               	movf	leer_DS1307@dirrecion_memoria,w,c
  2425  00132A  EC31  F00A         	call	_WriteI2C
  2426                           
  2427                           ;I2C_DS1307.h: 88: IdleI2C();
  2428  00132E  ECE3  F00A         	call	_IdleI2C	;wreg free
  2429                           
  2430                           ;I2C_DS1307.h: 89: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2431  001332  84C5               	bsf	4037,2,c	;volatile
  2432  001334                     l146:
  2433  001334  B4C5               	btfsc	4037,2,c	;volatile
  2434  001336  D7FE               	goto	l146
  2435                           
  2436                           ;I2C_DS1307.h: 91: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2437  001338  82C5               	bsf	4037,1,c	;volatile
  2438  00133A                     l149:
  2439  00133A  B2C5               	btfsc	4037,1,c	;volatile
  2440  00133C  D7FE               	goto	l149
  2441                           
  2442                           ;I2C_DS1307.h: 92: IdleI2C();
  2443  00133E  ECE3  F00A         	call	_IdleI2C	;wreg free
  2444                           
  2445                           ;I2C_DS1307.h: 93: WriteI2C(dirrecion_esclavo);
  2446  001342  5003               	movf	leer_DS1307@dirrecion_esclavo,w,c
  2447  001344  EC31  F00A         	call	_WriteI2C
  2448                           
  2449                           ;I2C_DS1307.h: 94: IdleI2C();
  2450  001348  ECE3  F00A         	call	_IdleI2C	;wreg free
  2451                           
  2452                           ;I2C_DS1307.h: 95: Data_DS1307=ReadI2C();
  2453  00134C  ECC2  F00A         	call	_ReadI2C	;wreg free
  2454  001350  6E07               	movwf	leer_DS1307@Data_DS1307,c
  2455                           
  2456                           ;I2C_DS1307.h: 96: IdleI2C();
  2457  001352  ECE3  F00A         	call	_IdleI2C	;wreg free
  2458                           
  2459                           ;I2C_DS1307.h: 97: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2460  001356  8AC5               	bsf	4037,5,c	;volatile
  2461  001358  88C5               	bsf	4037,4,c	;volatile
  2462  00135A                     l152:
  2463  00135A  B8C5               	btfsc	4037,4,c	;volatile
  2464  00135C  D7FE               	goto	l152
  2465                           
  2466                           ;I2C_DS1307.h: 98: IdleI2C();
  2467  00135E  ECE3  F00A         	call	_IdleI2C	;wreg free
  2468                           
  2469                           ;I2C_DS1307.h: 99: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2470  001362  84C5               	bsf	4037,2,c	;volatile
  2471  001364                     l155:
  2472  001364  B4C5               	btfsc	4037,2,c	;volatile
  2473  001366  D7FE               	goto	l155
  2474                           
  2475                           ;I2C_DS1307.h: 100: return Data_DS1307;
  2476  001368  C007  F003         	movff	leer_DS1307@Data_DS1307,?_leer_DS1307
  2477  00136C  6A04               	clrf	?_leer_DS1307+1,c
  2478  00136E  0012               	return		;funcret
  2479  001370                     __end_of_leer_DS1307:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           prodh	equ	0xFF4
  2486                           prodl	equ	0xFF3
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           indf2	equ	0xFDF
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _WriteI2C *****************
  2495 ;; Defined at:
  2496 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_writ.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  data_out        1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  data_out        1    1[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      char 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2513 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:        1 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    1
  2517 ;; This function calls:
  2518 ;;		_IdleI2C
  2519 ;; This function is called by:
  2520 ;;		_escribir_DS1307
  2521 ;;		_leer_DS1307
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text12
  2526  001462                     __ptext12:
  2527                           	opt stack 0
  2528  001462                     _WriteI2C:
  2529                           	opt stack 27
  2530                           
  2531                           ;incstack = 0
  2532                           ;WriteI2C@data_out stored from wreg
  2533  001462  6E02               	movwf	WriteI2C@data_out,c
  2534  001464  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2535  001468  BEC6               	btfsc	4038,7,c	;volatile
  2536  00146A  0012               	return	
  2537  00146C  50C6               	movf	4038,w,c	;volatile
  2538  00146E  0B0F               	andlw	15
  2539  001470  0A08               	xorlw	8
  2540  001472  E00A               	bz	l1068
  2541  001474  50C6               	movf	4038,w,c	;volatile
  2542  001476  0B0F               	andlw	15
  2543  001478  0A0B               	xorlw	11
  2544  00147A  E006               	bz	l1068
  2545  00147C  88C6               	bsf	4038,4,c	;volatile
  2546  00147E                     l323:
  2547  00147E  A69E               	btfss	3998,3,c	;volatile
  2548  001480  D7FE               	goto	l323
  2549  001482  A4C7               	btfss	4039,2,c	;volatile
  2550  001484  50C7               	movf	4039,w,c	;volatile
  2551  001486  0012               	return	
  2552  001488                     l1068:
  2553  001488  50C6               	movf	4038,w,c	;volatile
  2554  00148A  0B0F               	andlw	15
  2555  00148C  0A08               	xorlw	8
  2556  00148E  E005               	bz	u240
  2557  001490  50C6               	movf	4038,w,c	;volatile
  2558  001492  0B0F               	andlw	15
  2559  001494  0A0B               	xorlw	11
  2560  001496  A4D8               	btfss	status,2,c
  2561  001498  0012               	return	
  2562  00149A                     u240:
  2563  00149A  B0C7               	btfsc	4039,0,c	;volatile
  2564  00149C  D7FE               	goto	u240
  2565  00149E  ECE3  F00A         	call	_IdleI2C	;wreg free
  2566  0014A2  50C5               	movf	4037,w,c	;volatile
  2567  0014A4  0012               	return		;funcret
  2568  0014A6                     __end_of_WriteI2C:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           postinc0	equ	0xFEE
  2577                           wreg	equ	0xFE8
  2578                           indf2	equ	0xFDF
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _IdleI2C *****************
  2584 ;; Defined at:
  2585 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_idle.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_escribir_DS1307
  2609 ;;		_leer_DS1307
  2610 ;;		_main
  2611 ;;		_WriteI2C
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text13
  2616  0015C6                     __ptext13:
  2617                           	opt stack 0
  2618  0015C6                     _IdleI2C:
  2619                           	opt stack 27
  2620                           
  2621                           ;incstack = 0
  2622  0015C6  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  2623  0015CA  0E1F               	movlw	31
  2624  0015CC  1601               	andwf	??_IdleI2C,f,c
  2625  0015CE  E1FB               	bnz	_IdleI2C
  2626  0015D0  A4C7               	btfss	4039,2,c	;volatile
  2627  0015D2  0C1F               	retlw	31	;funcret
  2628  0015D4  D7F8               	goto	_IdleI2C
  2629  0015D6                     __end_of_IdleI2C:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           prodh	equ	0xFF4
  2636                           prodl	equ	0xFF3
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           indf2	equ	0xFDF
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _ReadI2C *****************
  2645 ;; Defined at:
  2646 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\i2c\i2c_read.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_leer_DS1307
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text14
  2674  001584                     __ptext14:
  2675                           	opt stack 0
  2676  001584                     _ReadI2C:
  2677                           	opt stack 28
  2678                           
  2679                           ;incstack = 0
  2680  001584  50C6               	movf	4038,w,c	;volatile
  2681  001586  0B0F               	andlw	15
  2682  001588  0A08               	xorlw	8
  2683  00158A  E004               	bz	u270
  2684  00158C  50C6               	movf	4038,w,c	;volatile
  2685  00158E  0B0F               	andlw	15
  2686  001590  0A0B               	xorlw	11
  2687  001592  E101               	bnz	l299
  2688  001594                     u270:
  2689  001594  86C5               	bsf	4037,3,c	;volatile
  2690  001596                     l299:
  2691  001596  A0C7               	btfss	4039,0,c	;volatile
  2692  001598  D7FE               	goto	l299
  2693  00159A  50C9               	movf	4041,w,c	;volatile
  2694  00159C  0012               	return		;funcret
  2695  00159E                     __end_of_ReadI2C:
  2696                           	opt stack 0
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           indf2	equ	0xFDF
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _dia_semana *****************
  2711 ;; Defined at:
  2712 ;;		line 103 in file "I2C_DS1307.h"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  dia_semana      2    8[COMRAM] unsigned short 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         2       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        4 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    2
  2733 ;; This function calls:
  2734 ;;		_Lcd_Out2
  2735 ;;		_putsUSART
  2736 ;; This function is called by:
  2737 ;;		_DS1307
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text15
  2742  001016                     __ptext15:
  2743                           	opt stack 0
  2744  001016                     _dia_semana:
  2745                           	opt stack 27
  2746                           
  2747                           ;I2C_DS1307.h: 104: switch (dia_semana) {
  2748                           
  2749                           ;incstack = 0
  2750  001016  D03C               	goto	l1710
  2751  001018                     l1694:
  2752                           
  2753                           ;I2C_DS1307.h: 106: putsUSART(" DOMINGO");
  2754  001018  0E33               	movlw	low STR_6
  2755  00101A  D851               	call	PL4	;call to abstracted procedure
  2756  00101C  ECE5  F009         	call	_putsUSART	;wreg free
  2757                           
  2758                           ;I2C_DS1307.h: 107: Lcd_Out2(2,11,"DOM");
  2759  001020  0E0B               	movlw	11
  2760  001022  6E04               	movwf	Lcd_Out2@x,c
  2761  001024  0E7D               	movlw	low STR_7
  2762  001026  D02F               	goto	L7
  2763  001028                     l1696:
  2764                           
  2765                           ;I2C_DS1307.h: 110: putsUSART(" LUNES");
  2766  001028  0E5D               	movlw	low STR_8
  2767  00102A  D849               	call	PL4	;call to abstracted procedure
  2768  00102C  ECE5  F009         	call	_putsUSART	;wreg free
  2769                           
  2770                           ;I2C_DS1307.h: 111: Lcd_Out2(2,11,"lUN");
  2771  001030  0E0B               	movlw	11
  2772  001032  6E04               	movwf	Lcd_Out2@x,c
  2773  001034  0E85               	movlw	low STR_9
  2774  001036  D027               	goto	L7
  2775  001038                     l1698:
  2776                           
  2777                           ;I2C_DS1307.h: 114: putsUSART(" MARTES");
  2778  001038  0E4D               	movlw	low STR_10
  2779  00103A  D841               	call	PL4	;call to abstracted procedure
  2780  00103C  ECE5  F009         	call	_putsUSART	;wreg free
  2781                           
  2782                           ;I2C_DS1307.h: 115: Lcd_Out2(2,11,"MAR");
  2783  001040  0E0B               	movlw	11
  2784  001042  6E04               	movwf	Lcd_Out2@x,c
  2785  001044  0E89               	movlw	low STR_11
  2786  001046  D01F               	goto	L7
  2787  001048                     l1700:
  2788                           
  2789                           ;I2C_DS1307.h: 118: putsUSART(" MIERCOLES");
  2790  001048  0E28               	movlw	low STR_12
  2791  00104A  D839               	call	PL4	;call to abstracted procedure
  2792  00104C  ECE5  F009         	call	_putsUSART	;wreg free
  2793                           
  2794                           ;I2C_DS1307.h: 119: Lcd_Out2(2,11,"MIE");
  2795  001050  0E0B               	movlw	11
  2796  001052  6E04               	movwf	Lcd_Out2@x,c
  2797  001054  0E6D               	movlw	low STR_13
  2798  001056  D017               	goto	L7
  2799  001058                     l1702:
  2800                           
  2801                           ;I2C_DS1307.h: 122: putsUSART(" JUEVES");
  2802  001058  0E55               	movlw	low STR_14
  2803  00105A  D831               	call	PL4	;call to abstracted procedure
  2804  00105C  ECE5  F009         	call	_putsUSART	;wreg free
  2805                           
  2806                           ;I2C_DS1307.h: 123: Lcd_Out2(2,11,"JUE");
  2807  001060  0E0B               	movlw	11
  2808  001062  6E04               	movwf	Lcd_Out2@x,c
  2809  001064  0E75               	movlw	low STR_15
  2810  001066  D00F               	goto	L7
  2811  001068                     l1704:
  2812                           
  2813                           ;I2C_DS1307.h: 126: putsUSART(" VIERNES");
  2814  001068  0E3C               	movlw	low STR_16
  2815  00106A  D829               	call	PL4	;call to abstracted procedure
  2816  00106C  ECE5  F009         	call	_putsUSART	;wreg free
  2817                           
  2818                           ;I2C_DS1307.h: 127: Lcd_Out2(2,11,"VIE");
  2819  001070  0E0B               	movlw	11
  2820  001072  6E04               	movwf	Lcd_Out2@x,c
  2821  001074  0E71               	movlw	low STR_17
  2822  001076  D007               	goto	L7
  2823  001078                     l1706:
  2824                           
  2825                           ;I2C_DS1307.h: 130: putsUSART(" SABADO");
  2826  001078  0E45               	movlw	low STR_18
  2827  00107A  D821               	call	PL4	;call to abstracted procedure
  2828  00107C  ECE5  F009         	call	_putsUSART	;wreg free
  2829                           
  2830                           ;I2C_DS1307.h: 131: Lcd_Out2(2,11,"SAB");
  2831  001080  0E0B               	movlw	11
  2832  001082  6E04               	movwf	Lcd_Out2@x,c
  2833  001084  0E69               	movlw	low STR_19
  2834  001086                     L7:
  2835  001086  ECA8  F007         	call	PL30	;call to abstracted procedure
  2836  00108A  0E02               	movlw	2
  2837  00108C  EFAB  F008         	goto	_Lcd_Out2
  2838  001090                     l1710:
  2839  001090  C009  F00B         	movff	dia_semana@dia_semana,??_dia_semana
  2840  001094  C00A  F00C         	movff	dia_semana@dia_semana+1,??_dia_semana+1
  2841                           
  2842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2843                           ; Switch size 1, requested type "space"
  2844                           ; Number of cases is 1, Range of values is 0 to 0
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte            4     3 (average)
  2848                           ;	Chosen strategy is simple_byte
  2849  001098  500C               	movf	??_dia_semana+1,w,c
  2850  00109A  A4D8               	btfss	status,2,c
  2851  00109C  0012               	return	
  2852                           
  2853                           ; Switch size 1, requested type "space"
  2854                           ; Number of cases is 7, Range of values is 1 to 7
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte           22    12 (average)
  2858                           ;	Chosen strategy is simple_byte
  2859  00109E  500B               	movf	??_dia_semana,w,c
  2860  0010A0  0A01               	xorlw	1	; case 1
  2861  0010A2  E0BA               	bz	l1694
  2862  0010A4  0A03               	xorlw	3	; case 2
  2863  0010A6  E0C0               	bz	l1696
  2864  0010A8  0A01               	xorlw	1	; case 3
  2865  0010AA  E0C6               	bz	l1698
  2866  0010AC  0A07               	xorlw	7	; case 4
  2867  0010AE  E0CC               	bz	l1700
  2868  0010B0  0A01               	xorlw	1	; case 5
  2869  0010B2  E0D2               	bz	l1702
  2870  0010B4  0A03               	xorlw	3	; case 6
  2871  0010B6  E0D8               	bz	l1704
  2872  0010B8  0A01               	xorlw	1	; case 7
  2873  0010BA  E0DE               	bz	l1706
  2874  0010BC  0012               	return		;funcret
  2875  0010BE                     __end_of_dia_semana:
  2876                           	opt stack 0
  2877  0010BE                     PL4:
  2878                           	opt stack 27
  2879  0010BE  6E02               	movwf	putsUSART@data,c
  2880  0010C0  5002               	movf	putsUSART@data,w,c
  2881  0010C2  A4D8               	btfss	status,2,c
  2882  0010C4  0E08               	movlw	high __smallconst
  2883  0010C6  6E03               	movwf	putsUSART@data+1,c
  2884  0010C8  0012               	return	
  2885  0010CA                     __end_ofPL4:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           indf2	equ	0xFDF
  2896                           fsr2h	equ	0xFDA
  2897                           fsr2l	equ	0xFD9
  2898                           status	equ	0xFD8
  2899                           
  2900 ;; *************** function _putsUSART *****************
  2901 ;; Defined at:
  2902 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uputs.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  data            2    1[COMRAM] PTR unsigned char 
  2905 ;;		 -> NULL(0), STR_18(8), STR_16(9), STR_14(8), 
  2906 ;;		 -> STR_12(11), STR_10(8), STR_8(7), STR_6(9), 
  2907 ;;		 -> STR_5(3), STR_4(3), txt_DS1307(12), STR_3(4), 
  2908 ;;		 -> STR_2(4), STR_1(4), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         2       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        4 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		_WriteUSART
  2929 ;; This function is called by:
  2930 ;;		_DS1307
  2931 ;;		_dia_semana
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text16
  2936  0013CA                     __ptext16:
  2937                           	opt stack 0
  2938  0013CA                     _putsUSART:
  2939                           	opt stack 28
  2940                           
  2941                           ;incstack = 0
  2942  0013CA  A2AC               	btfss	4012,1,c	;volatile
  2943  0013CC  D7FE               	goto	_putsUSART
  2944  0013CE  C002  FFF6         	movff	putsUSART@data,tblptrl
  2945  0013D2  C003  FFF7         	movff	putsUSART@data+1,tblptrh
  2946  0013D6  6AF8               	clrf	tblptru,c
  2947  0013D8  0E07               	movlw	(high __ramtop+-1)
  2948  0013DA  64F7               	cpfsgt	tblptrh,c
  2949  0013DC  D003               	bra	u827
  2950  0013DE  0008               	tblrd		*
  2951  0013E0  50F5               	movf	tablat,w,c
  2952  0013E2  D002               	bra	u820
  2953  0013E4                     u827:
  2954  0013E4  ECDC  F008         	call	PL20	;call to abstracted procedure
  2955  0013E8                     u820:
  2956  0013E8  ECDA  F00A         	call	_WriteUSART
  2957  0013EC  5002               	movf	putsUSART@data,w,c
  2958  0013EE  6E04               	movwf	??_putsUSART& (0+255),c
  2959  0013F0  5003               	movf	putsUSART@data+1,w,c
  2960  0013F2  6E05               	movwf	(??_putsUSART+1)& (0+255),c
  2961  0013F4  4A02               	infsnz	putsUSART@data,f,c
  2962  0013F6  2A03               	incf	putsUSART@data+1,f,c
  2963  0013F8  C004  FFF6         	movff	??_putsUSART,tblptrl
  2964  0013FC  C005  FFF7         	movff	??_putsUSART+1,tblptrh
  2965  001400  6AF8               	clrf	tblptru,c
  2966  001402  0E07               	movlw	(high __ramtop+-1)
  2967  001404  64F7               	cpfsgt	tblptrh,c
  2968  001406  D003               	bra	u837
  2969  001408  0008               	tblrd		*
  2970  00140A  50F5               	movf	tablat,w,c
  2971  00140C  D002               	bra	u830
  2972  00140E                     u837:
  2973  00140E  ECDC  F008         	call	PL20	;call to abstracted procedure
  2974  001412                     u830:
  2975  001412  0900               	iorlw	0
  2976  001414  E1DA               	bnz	_putsUSART
  2977  001416  0012               	return		;funcret
  2978  001418                     __end_of_putsUSART:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           prodh	equ	0xFF4
  2985                           prodl	equ	0xFF3
  2986                           postinc0	equ	0xFEE
  2987                           wreg	equ	0xFE8
  2988                           indf2	equ	0xFDF
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8
  2992                           
  2993 ;; *************** function _WriteUSART *****************
  2994 ;; Defined at:
  2995 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uwrite.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  data            1    wreg     unsigned char 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  data            1    0[COMRAM] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0
  3010 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3012 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3013 ;;Total ram usage:        1 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_putsUSART
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text17
  3023  0015B4                     __ptext17:
  3024                           	opt stack 0
  3025  0015B4                     _WriteUSART:
  3026                           	opt stack 28
  3027                           
  3028                           ;incstack = 0
  3029                           ;WriteUSART@data stored from wreg
  3030  0015B4  6E01               	movwf	WriteUSART@data,c
  3031  0015B6  ACAC               	btfss	4012,6,c	;volatile
  3032  0015B8  D003               	goto	l1552
  3033  0015BA  90AC               	bcf	4012,0,c	;volatile
  3034  0015BC  B239               	btfsc	_USART_Status,1,c
  3035  0015BE  80AC               	bsf	4012,0,c	;volatile
  3036  0015C0                     l1552:
  3037  0015C0  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  3038  0015C4  0012               	return		;funcret
  3039  0015C6                     __end_of_WriteUSART:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           prodh	equ	0xFF4
  3046                           prodl	equ	0xFF3
  3047                           postinc0	equ	0xFEE
  3048                           wreg	equ	0xFE8
  3049                           indf2	equ	0xFDF
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _Lcd_Out2 *****************
  3055 ;; Defined at:
  3056 ;;		line 115 in file "flex_lcd.h"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  y               1    wreg     unsigned char 
  3059 ;;  x               1    3[COMRAM] unsigned char 
  3060 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  3061 ;;		 -> NULL(0), STR_22(5), STR_21(16), STR_20(15), 
  3062 ;;		 -> STR_19(4), STR_17(4), STR_15(4), STR_13(4), 
  3063 ;;		 -> STR_11(4), STR_9(4), STR_7(4), txt_DS1307(12), 
  3064 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  y               1    6[COMRAM] unsigned char 
  3067 ;;  data            1    7[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         3       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        5 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    1
  3084 ;; This function calls:
  3085 ;;		_Lcd_Chr_CP
  3086 ;;		_Lcd_Cmd
  3087 ;; This function is called by:
  3088 ;;		_DS1307
  3089 ;;		_dia_semana
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text18
  3095  001156                     __ptext18:
  3096                           	opt stack 0
  3097  001156                     _Lcd_Out2:
  3098                           	opt stack 29
  3099                           
  3100                           ;incstack = 0
  3101                           ;Lcd_Out2@y stored from wreg
  3102  001156  6E07               	movwf	Lcd_Out2@y,c
  3103                           
  3104                           ;flex_lcd.h: 117: unsigned char data;
  3105                           ;flex_lcd.h: 118: switch (y)
  3106  001158  D00D               	goto	l1566
  3107  00115A                     l1556:
  3108  00115A  5004               	movf	Lcd_Out2@x,w,c
  3109  00115C  0F80               	addlw	128
  3110  00115E  D008               	goto	L10
  3111  001160                     l1558:
  3112  001160  5004               	movf	Lcd_Out2@x,w,c
  3113  001162  0FC0               	addlw	192
  3114  001164  D005               	goto	L10
  3115  001166                     l1560:
  3116  001166  5004               	movf	Lcd_Out2@x,w,c
  3117  001168  0F94               	addlw	148
  3118  00116A  D002               	goto	L10
  3119  00116C                     l1562:
  3120  00116C  5004               	movf	Lcd_Out2@x,w,c
  3121  00116E  0FD4               	addlw	212
  3122  001170                     L10:
  3123  001170  6E08               	movwf	Lcd_Out2@data,c
  3124  001172  D009               	goto	l1568
  3125  001174                     l1566:
  3126  001174  5007               	movf	Lcd_Out2@y,w,c
  3127                           
  3128                           ; Switch size 1, requested type "space"
  3129                           ; Number of cases is 4, Range of values is 1 to 4
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte           13     7 (average)
  3133                           ;	Chosen strategy is simple_byte
  3134  001176  0A01               	xorlw	1	; case 1
  3135  001178  E0F0               	bz	l1556
  3136  00117A  0A03               	xorlw	3	; case 2
  3137  00117C  E0F1               	bz	l1558
  3138  00117E  0A01               	xorlw	1	; case 3
  3139  001180  E0F2               	bz	l1560
  3140  001182  0A07               	xorlw	7	; case 4
  3141  001184  E0F3               	bz	l1562
  3142  001186                     l1568:
  3143                           
  3144                           ;flex_lcd.h: 126: Lcd_Cmd(data);
  3145  001186  5008               	movf	Lcd_Out2@data,w,c
  3146  001188  ECD1  F006         	call	_Lcd_Cmd
  3147                           
  3148                           ;flex_lcd.h: 127: while(*buffer)
  3149  00118C  D00B               	goto	l1574
  3150  00118E                     l1570:
  3151                           
  3152                           ;flex_lcd.h: 128: {
  3153                           ;flex_lcd.h: 129: Lcd_Chr_CP(*buffer);
  3154  00118E  D81A               	call	PL44	;call to abstracted procedure
  3155  001190  64F7               	cpfsgt	tblptrh,c
  3156  001192  D003               	bra	u787
  3157  001194  0008               	tblrd		*
  3158  001196  50F5               	movf	tablat,w,c
  3159  001198  D001               	bra	u780
  3160  00119A                     u787:
  3161  00119A  D80E               	call	PL20	;call to abstracted procedure
  3162  00119C                     u780:
  3163  00119C  EC55  F006         	call	_Lcd_Chr_CP
  3164                           
  3165                           ;flex_lcd.h: 130: buffer++;
  3166  0011A0  4A05               	infsnz	Lcd_Out2@buffer,f,c
  3167  0011A2  2A06               	incf	Lcd_Out2@buffer+1,f,c
  3168  0011A4                     l1574:
  3169  0011A4  D80F               	call	PL44	;call to abstracted procedure
  3170  0011A6  64F7               	cpfsgt	tblptrh,c
  3171  0011A8  D003               	bra	u797
  3172  0011AA  0008               	tblrd		*
  3173  0011AC  50F5               	movf	tablat,w,c
  3174  0011AE  D001               	bra	u790
  3175  0011B0                     u797:
  3176  0011B0  D803               	call	PL20	;call to abstracted procedure
  3177  0011B2                     u790:
  3178  0011B2  0900               	iorlw	0
  3179  0011B4  E1EC               	bnz	l1570
  3180  0011B6  0012               	return		;funcret
  3181  0011B8                     __end_of_Lcd_Out2:
  3182                           	opt stack 0
  3183  0011B8                     PL20:
  3184                           	opt stack 28
  3185  0011B8  CFF6 FFD9          	movff	tblptrl,fsr2l
  3186  0011BC  CFF7 FFDA          	movff	tblptrh,fsr2h
  3187  0011C0  50DF               	movf	indf2,w,c
  3188  0011C2  0012               	return	
  3189  0011C4                     __end_ofPL20:
  3190                           	opt stack 0
  3191  0011C4                     PL44:
  3192                           	opt stack 29
  3193  0011C4  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  3194  0011C8  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  3195  0011CC  6AF8               	clrf	tblptru,c
  3196  0011CE  0E07               	movlw	(high __ramtop+-1)
  3197  0011D0  0012               	return	
  3198  0011D2                     __end_ofPL44:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf2	equ	0xFDF
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _Lcd_Cmd *****************
  3214 ;; Defined at:
  3215 ;;		line 150 in file "flex_lcd.h"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  data            1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  data            1    2[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3231 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3232 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        3 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_Lcd_Init
  3239 ;;		_Lcd_Out2
  3240 ;;		_main
  3241 ;;		_Leer_Pulsador
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text19
  3246  000DA2                     __ptext19:
  3247                           	opt stack 0
  3248  000DA2                     _Lcd_Cmd:
  3249                           	opt stack 29
  3250                           
  3251                           ;incstack = 0
  3252                           ;Lcd_Cmd@data stored from wreg
  3253  000DA2  6E03               	movwf	Lcd_Cmd@data,c
  3254                           
  3255                           ;flex_lcd.h: 151: PORTDbits.RD3 = 0; PORTDbits.RD2 = 0;
  3256  000DA4  9683               	bcf	3971,3,c	;volatile
  3257  000DA6  9483               	bcf	3971,2,c	;volatile
  3258                           
  3259                           ;flex_lcd.h: 152: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b0100
      +                          0000)>>6;
  3260  000DA8  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  3261  000DAA  AE03               	btfss	Lcd_Cmd@data,7,c
  3262  000DAC  D001               	bra	u15
  3263  000DAE  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  3264  000DB0                     u15:
  3265  000DB0  0E01               	movlw	1
  3266  000DB2  D853               	call	PL26	;call to abstracted procedure
  3267  000DB4  D84D               	call	PL22	;call to abstracted procedure
  3268  000DB6  0E06               	movlw	6
  3269  000DB8  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3270  000DBA                     u25:
  3271  000DBA  90D8               	bcf	status,0,c
  3272  000DBC  3201               	rrcf	??_Lcd_Cmd,f,c
  3273  000DBE  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3274  000DC0  D7FC               	goto	u25
  3275  000DC2  0E01               	movlw	1
  3276                           
  3277                           ;flex_lcd.h: 153: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b0001
      +                          0000)>>4;
  3278  000DC4  D839               	call	PL12	;call to abstracted procedure
  3279  000DC6  0E05               	movlw	5
  3280  000DC8  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3281  000DCA                     u35:
  3282  000DCA  90D8               	bcf	status,0,c
  3283  000DCC  3201               	rrcf	??_Lcd_Cmd,f,c
  3284  000DCE  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3285  000DD0  D7FC               	goto	u35
  3286  000DD2  0E01               	movlw	1
  3287  000DD4  D849               	call	PL28	;call to abstracted procedure
  3288  000DD6  D83C               	call	PL22	;call to abstracted procedure
  3289  000DD8  3A01               	swapf	??_Lcd_Cmd,f,c
  3290  000DDA  0E0F               	movlw	15
  3291  000DDC  1601               	andwf	??_Lcd_Cmd,f,c
  3292  000DDE  D84B               	call	PL36	;call to abstracted procedure
  3293                           
  3294                           ;flex_lcd.h: 154: _delay(10);
  3295  000DE0  0E03               	movlw	3
  3296  000DE2                     u1377:
  3297  000DE2  2EE8               	decfsz	wreg,f,c
  3298  000DE4  D7FE               	bra	u1377
  3299  000DE6  F000               	nop	
  3300                           
  3301                           ;flex_lcd.h: 155: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3302  000DE8  8683               	bsf	3971,3,c	;volatile
  3303  000DEA  0E06               	movlw	6
  3304  000DEC                     u1387:
  3305  000DEC  2EE8               	decfsz	wreg,f,c
  3306  000DEE  D7FE               	bra	u1387
  3307  000DF0  D000               	nop2	
  3308  000DF2  9683               	bcf	3971,3,c	;volatile
  3309                           
  3310                           ;flex_lcd.h: 156: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b0000
      +                          0100)>>2;
  3311  000DF4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3312  000DF8  90D8               	bcf	status,0,c
  3313  000DFA  3201               	rrcf	??_Lcd_Cmd,f,c
  3314  000DFC  D845               	call	PL42	;call to abstracted procedure
  3315  000DFE  D82D               	call	PL26	;call to abstracted procedure
  3316  000E00  D827               	call	PL22	;call to abstracted procedure
  3317  000E02  D842               	call	PL42	;call to abstracted procedure
  3318                           
  3319                           ;flex_lcd.h: 157: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b0000
      +                          0001);
  3320  000E04  D819               	call	PL12	;call to abstracted procedure
  3321  000E06  90D8               	bcf	status,0,c
  3322  000E08  3201               	rrcf	??_Lcd_Cmd,f,c
  3323  000E0A  0E01               	movlw	1
  3324  000E0C  D82D               	call	PL28	;call to abstracted procedure
  3325  000E0E  D820               	call	PL22	;call to abstracted procedure
  3326  000E10  D832               	call	PL36	;call to abstracted procedure
  3327                           
  3328                           ;flex_lcd.h: 158: _delay(10);
  3329  000E12  0E03               	movlw	3
  3330  000E14                     u1397:
  3331  000E14  2EE8               	decfsz	wreg,f,c
  3332  000E16  D7FE               	bra	u1397
  3333  000E18  F000               	nop	
  3334                           
  3335                           ;flex_lcd.h: 159: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3336  000E1A  8683               	bsf	3971,3,c	;volatile
  3337  000E1C  0E06               	movlw	6
  3338  000E1E                     u1407:
  3339  000E1E  2EE8               	decfsz	wreg,f,c
  3340  000E20  D7FE               	bra	u1407
  3341  000E22  D000               	nop2	
  3342  000E24  9683               	bcf	3971,3,c	;volatile
  3343                           
  3344                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  3345  000E26  0E1D               	movlw	29
  3346  000E28  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  3347  000E2A  0E91               	movlw	145
  3348  000E2C                     u1417:
  3349  000E2C  2EE8               	decfsz	wreg,f,c
  3350  000E2E  D7FE               	bra	u1417
  3351  000E30  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  3352  000E32  D7FC               	bra	u1417
  3353  000E34  F000               	nop	
  3354  000E36  0012               	return		;funcret
  3355  000E38                     __end_of_Lcd_Cmd:
  3356                           	opt stack 0
  3357  000E38                     PL12:
  3358                           	opt stack 29
  3359  000E38  1601               	andwf	??_Lcd_Cmd,f,c
  3360  000E3A  3A01               	swapf	??_Lcd_Cmd,f,c
  3361  000E3C  4601               	rlncf	??_Lcd_Cmd,f,c
  3362  000E3E  4601               	rlncf	??_Lcd_Cmd,f,c
  3363  000E40  5083               	movf	3971,w,c	;volatile
  3364  000E42  1801               	xorwf	??_Lcd_Cmd,w,c
  3365  000E44  0BBF               	andlw	-65
  3366  000E46  1801               	xorwf	??_Lcd_Cmd,w,c
  3367  000E48  6E83               	movwf	3971,c	;volatile
  3368  000E4A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3369  000E4E  0012               	return	
  3370  000E50                     __end_ofPL12:
  3371                           	opt stack 0
  3372  000E50                     PL22:
  3373                           	opt stack 29
  3374  000E50  1801               	xorwf	??_Lcd_Cmd,w,c
  3375  000E52  6E83               	movwf	3971,c	;volatile
  3376  000E54  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3377  000E58  0012               	return	
  3378  000E5A                     __end_ofPL22:
  3379                           	opt stack 0
  3380  000E5A                     PL26:
  3381                           	opt stack 29
  3382  000E5A  1601               	andwf	??_Lcd_Cmd,f,c
  3383  000E5C  3201               	rrcf	??_Lcd_Cmd,f,c
  3384  000E5E  3201               	rrcf	??_Lcd_Cmd,f,c
  3385  000E60  5083               	movf	3971,w,c	;volatile
  3386  000E62  1801               	xorwf	??_Lcd_Cmd,w,c
  3387  000E64  0B7F               	andlw	-129
  3388  000E66  0012               	return	
  3389  000E68                     __end_ofPL26:
  3390                           	opt stack 0
  3391  000E68                     PL28:
  3392                           	opt stack 29
  3393  000E68  1601               	andwf	??_Lcd_Cmd,f,c
  3394  000E6A  3A01               	swapf	??_Lcd_Cmd,f,c
  3395  000E6C  4601               	rlncf	??_Lcd_Cmd,f,c
  3396  000E6E  5083               	movf	3971,w,c	;volatile
  3397  000E70  1801               	xorwf	??_Lcd_Cmd,w,c
  3398  000E72  0BDF               	andlw	-33
  3399  000E74  0012               	return	
  3400  000E76                     __end_ofPL28:
  3401                           	opt stack 0
  3402  000E76                     PL36:
  3403                           	opt stack 29
  3404  000E76  0E01               	movlw	1
  3405  000E78  1601               	andwf	??_Lcd_Cmd,f,c
  3406  000E7A  3A01               	swapf	??_Lcd_Cmd,f,c
  3407  000E7C  5083               	movf	3971,w,c	;volatile
  3408  000E7E  1801               	xorwf	??_Lcd_Cmd,w,c
  3409  000E80  0BEF               	andlw	-17
  3410  000E82  1801               	xorwf	??_Lcd_Cmd,w,c
  3411  000E84  6E83               	movwf	3971,c	;volatile
  3412  000E86  0012               	return	
  3413  000E88                     __end_ofPL36:
  3414                           	opt stack 0
  3415  000E88                     PL42:
  3416                           	opt stack 29
  3417  000E88  90D8               	bcf	status,0,c
  3418  000E8A  3201               	rrcf	??_Lcd_Cmd,f,c
  3419  000E8C  90D8               	bcf	status,0,c
  3420  000E8E  3201               	rrcf	??_Lcd_Cmd,f,c
  3421  000E90  0C01               	retlw	1
  3422  000E92                     __end_ofPL42:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           indf2	equ	0xFDF
  3433                           fsr2h	equ	0xFDA
  3434                           fsr2l	equ	0xFD9
  3435                           status	equ	0xFD8
  3436                           
  3437 ;; *************** function _Lcd_Chr_CP *****************
  3438 ;; Defined at:
  3439 ;;		line 136 in file "flex_lcd.h"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  data            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  data            1    2[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3455 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3456 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3457 ;;Total ram usage:        3 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_Lcd_Out2
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text20
  3467  000CAA                     __ptext20:
  3468                           	opt stack 0
  3469  000CAA                     _Lcd_Chr_CP:
  3470                           	opt stack 29
  3471                           
  3472                           ;incstack = 0
  3473                           ;Lcd_Chr_CP@data stored from wreg
  3474  000CAA  6E03               	movwf	Lcd_Chr_CP@data,c
  3475                           
  3476                           ;flex_lcd.h: 137: PORTDbits.RD3 = 0; PORTDbits.RD2 = 1;
  3477  000CAC  9683               	bcf	3971,3,c	;volatile
  3478  000CAE  8483               	bsf	3971,2,c	;volatile
  3479                           
  3480                           ;flex_lcd.h: 138: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b0100
      +                          0000)>>6;
  3481  000CB0  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  3482  000CB2  AE03               	btfss	Lcd_Chr_CP@data,7,c
  3483  000CB4  D001               	bra	u45
  3484  000CB6  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  3485  000CB8                     u45:
  3486  000CB8  0E01               	movlw	1
  3487  000CBA  D85E               	call	PL24	;call to abstracted procedure
  3488  000CBC  D851               	call	PL16	;call to abstracted procedure
  3489  000CBE  0E06               	movlw	6
  3490  000CC0  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3491  000CC2                     u55:
  3492  000CC2  90D8               	bcf	status,0,c
  3493  000CC4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3494  000CC6  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3495  000CC8  D7FC               	goto	u55
  3496  000CCA  0E01               	movlw	1
  3497                           
  3498                           ;flex_lcd.h: 139: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b0001
      +                          0000)>>4;
  3499  000CCC  D83D               	call	PL14	;call to abstracted procedure
  3500  000CCE  0E05               	movlw	5
  3501  000CD0  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3502  000CD2                     u65:
  3503  000CD2  90D8               	bcf	status,0,c
  3504  000CD4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3505  000CD6  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3506  000CD8  D7FC               	goto	u65
  3507  000CDA  0E01               	movlw	1
  3508  000CDC  D846               	call	PL18	;call to abstracted procedure
  3509  000CDE  D840               	call	PL16	;call to abstracted procedure
  3510  000CE0  3A01               	swapf	??_Lcd_Chr_CP,f,c
  3511  000CE2  0E0F               	movlw	15
  3512  000CE4  1601               	andwf	??_Lcd_Chr_CP,f,c
  3513  000CE6  D84F               	call	PL34	;call to abstracted procedure
  3514                           
  3515                           ;flex_lcd.h: 140: _delay(10);
  3516  000CE8  0E03               	movlw	3
  3517  000CEA                     u1427:
  3518  000CEA  2EE8               	decfsz	wreg,f,c
  3519  000CEC  D7FE               	bra	u1427
  3520  000CEE  F000               	nop	
  3521                           
  3522                           ;flex_lcd.h: 141: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3523  000CF0  8683               	bsf	3971,3,c	;volatile
  3524  000CF2  0E06               	movlw	6
  3525  000CF4                     u1437:
  3526  000CF4  2EE8               	decfsz	wreg,f,c
  3527  000CF6  D7FE               	bra	u1437
  3528  000CF8  D000               	nop2	
  3529  000CFA  9683               	bcf	3971,3,c	;volatile
  3530                           
  3531                           ;flex_lcd.h: 142: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b0000
      +                          0100)>>2;
  3532  000CFC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3533  000D00  90D8               	bcf	status,0,c
  3534  000D02  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3535  000D04  D849               	call	PL40	;call to abstracted procedure
  3536  000D06  D838               	call	PL24	;call to abstracted procedure
  3537  000D08  D82B               	call	PL16	;call to abstracted procedure
  3538  000D0A  D846               	call	PL40	;call to abstracted procedure
  3539                           
  3540                           ;flex_lcd.h: 143: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b0000
      +                          0001);
  3541  000D0C  D81D               	call	PL14	;call to abstracted procedure
  3542  000D0E  90D8               	bcf	status,0,c
  3543  000D10  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3544  000D12  0E01               	movlw	1
  3545  000D14  D82A               	call	PL18	;call to abstracted procedure
  3546  000D16  D824               	call	PL16	;call to abstracted procedure
  3547  000D18  D836               	call	PL34	;call to abstracted procedure
  3548                           
  3549                           ;flex_lcd.h: 144: _delay(10);
  3550  000D1A  0E03               	movlw	3
  3551  000D1C                     u1447:
  3552  000D1C  2EE8               	decfsz	wreg,f,c
  3553  000D1E  D7FE               	bra	u1447
  3554  000D20  F000               	nop	
  3555                           
  3556                           ;flex_lcd.h: 145: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); 
      +                          PORTDbits.RD3 = 0;
  3557  000D22  8683               	bsf	3971,3,c	;volatile
  3558  000D24  0E06               	movlw	6
  3559  000D26                     u1457:
  3560  000D26  2EE8               	decfsz	wreg,f,c
  3561  000D28  D7FE               	bra	u1457
  3562  000D2A  D000               	nop2	
  3563  000D2C  9683               	bcf	3971,3,c	;volatile
  3564                           
  3565                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(16000000/4000000.0))); _delay((unsigned lo
      +                          ng)((5500)*(16000000/4000000.0)));
  3566  000D2E  0E06               	movlw	6
  3567  000D30                     u1467:
  3568  000D30  2EE8               	decfsz	wreg,f,c
  3569  000D32  D7FE               	bra	u1467
  3570  000D34  D000               	nop2	
  3571  000D36  0E1D               	movlw	29
  3572  000D38  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  3573  000D3A  0E91               	movlw	145
  3574  000D3C                     u1477:
  3575  000D3C  2EE8               	decfsz	wreg,f,c
  3576  000D3E  D7FE               	bra	u1477
  3577  000D40  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  3578  000D42  D7FC               	bra	u1477
  3579  000D44  F000               	nop	
  3580  000D46  0012               	return		;funcret
  3581  000D48                     __end_of_Lcd_Chr_CP:
  3582                           	opt stack 0
  3583  000D48                     PL14:
  3584                           	opt stack 29
  3585  000D48  1601               	andwf	??_Lcd_Chr_CP,f,c
  3586  000D4A  3A01               	swapf	??_Lcd_Chr_CP,f,c
  3587  000D4C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  3588  000D4E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  3589  000D50  5083               	movf	3971,w,c	;volatile
  3590  000D52  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3591  000D54  0BBF               	andlw	-65
  3592  000D56  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3593  000D58  6E83               	movwf	3971,c	;volatile
  3594  000D5A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3595  000D5E  0012               	return	
  3596  000D60                     __end_ofPL14:
  3597                           	opt stack 0
  3598  000D60                     PL16:
  3599                           	opt stack 29
  3600  000D60  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3601  000D62  6E83               	movwf	3971,c	;volatile
  3602  000D64  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3603  000D68  0012               	return	
  3604  000D6A                     __end_ofPL16:
  3605                           	opt stack 0
  3606  000D6A                     PL18:
  3607                           	opt stack 29
  3608  000D6A  1601               	andwf	??_Lcd_Chr_CP,f,c
  3609  000D6C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  3610  000D6E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  3611  000D70  5083               	movf	3971,w,c	;volatile
  3612  000D72  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3613  000D74  0BDF               	andlw	-33
  3614  000D76  0012               	return	
  3615  000D78                     __end_ofPL18:
  3616                           	opt stack 0
  3617  000D78                     PL24:
  3618                           	opt stack 29
  3619  000D78  1601               	andwf	??_Lcd_Chr_CP,f,c
  3620  000D7A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3621  000D7C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3622  000D7E  5083               	movf	3971,w,c	;volatile
  3623  000D80  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3624  000D82  0B7F               	andlw	-129
  3625  000D84  0012               	return	
  3626  000D86                     __end_ofPL24:
  3627                           	opt stack 0
  3628  000D86                     PL34:
  3629                           	opt stack 29
  3630  000D86  0E01               	movlw	1
  3631  000D88  1601               	andwf	??_Lcd_Chr_CP,f,c
  3632  000D8A  3A01               	swapf	??_Lcd_Chr_CP,f,c
  3633  000D8C  5083               	movf	3971,w,c	;volatile
  3634  000D8E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3635  000D90  0BEF               	andlw	-17
  3636  000D92  1801               	xorwf	??_Lcd_Chr_CP,w,c
  3637  000D94  6E83               	movwf	3971,c	;volatile
  3638  000D96  0012               	return	
  3639  000D98                     __end_ofPL34:
  3640                           	opt stack 0
  3641  000D98                     PL40:
  3642                           	opt stack 29
  3643  000D98  90D8               	bcf	status,0,c
  3644  000D9A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3645  000D9C  90D8               	bcf	status,0,c
  3646  000D9E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  3647  000DA0  0C01               	retlw	1
  3648  000DA2                     __end_ofPL40:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           indf2	equ	0xFDF
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function ___lwmod *****************
  3664 ;; Defined at:
  3665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  dividend        2    7[COMRAM] unsigned int 
  3668 ;;  divisor         2    9[COMRAM] unsigned int 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  counter         1   11[COMRAM] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2    7[COMRAM] unsigned int 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3680 ;;      Params:         4       0       0       0       0       0       0       0       0
  3681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3683 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3684 ;;Total ram usage:        5 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_DS1307
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text21
  3694  0014A6                     __ptext21:
  3695                           	opt stack 0
  3696  0014A6                     ___lwmod:
  3697                           	opt stack 29
  3698                           
  3699                           ;incstack = 0
  3700  0014A6  500A               	movf	___lwmod@divisor,w,c
  3701  0014A8  100B               	iorwf	___lwmod@divisor+1,w,c
  3702  0014AA  E017               	bz	l749
  3703  0014AC  0E01               	movlw	1
  3704  0014AE  6E0C               	movwf	___lwmod@counter,c
  3705  0014B0  D004               	goto	l1770
  3706  0014B2                     l1768:
  3707  0014B2  90D8               	bcf	status,0,c
  3708  0014B4  360A               	rlcf	___lwmod@divisor,f,c
  3709  0014B6  360B               	rlcf	___lwmod@divisor+1,f,c
  3710  0014B8  2A0C               	incf	___lwmod@counter,f,c
  3711  0014BA                     l1770:
  3712  0014BA  AE0B               	btfss	___lwmod@divisor+1,7,c
  3713  0014BC  D7FA               	goto	l1768
  3714  0014BE                     u1090:
  3715  0014BE  500A               	movf	___lwmod@divisor,w,c
  3716  0014C0  5C08               	subwf	___lwmod@dividend,w,c
  3717  0014C2  500B               	movf	___lwmod@divisor+1,w,c
  3718  0014C4  5809               	subwfb	___lwmod@dividend+1,w,c
  3719  0014C6  E304               	bnc	l1776
  3720  0014C8  500A               	movf	___lwmod@divisor,w,c
  3721  0014CA  5E08               	subwf	___lwmod@dividend,f,c
  3722  0014CC  500B               	movf	___lwmod@divisor+1,w,c
  3723  0014CE  5A09               	subwfb	___lwmod@dividend+1,f,c
  3724  0014D0                     l1776:
  3725  0014D0  90D8               	bcf	status,0,c
  3726  0014D2  320B               	rrcf	___lwmod@divisor+1,f,c
  3727  0014D4  320A               	rrcf	___lwmod@divisor,f,c
  3728  0014D6  2E0C               	decfsz	___lwmod@counter,f,c
  3729  0014D8  D7F2               	goto	u1090
  3730  0014DA                     l749:
  3731  0014DA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3732  0014DE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3733  0014E2  0012               	return		;funcret
  3734  0014E4                     __end_of___lwmod:
  3735                           	opt stack 0
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           indf2	equ	0xFDF
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function ___lwdiv *****************
  3750 ;; Defined at:
  3751 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  dividend        2    0[COMRAM] unsigned int 
  3754 ;;  divisor         2    2[COMRAM] unsigned int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  quotient        2    4[COMRAM] unsigned int 
  3757 ;;  counter         1    6[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2    0[COMRAM] unsigned int 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3767 ;;      Params:         4       0       0       0       0       0       0       0       0
  3768 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3770 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3771 ;;Total ram usage:        7 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_DS1307
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text22
  3781  001418                     __ptext22:
  3782                           	opt stack 0
  3783  001418                     ___lwdiv:
  3784                           	opt stack 29
  3785                           
  3786                           ;incstack = 0
  3787  001418  6A05               	clrf	___lwdiv@quotient,c
  3788  00141A  6A06               	clrf	___lwdiv@quotient+1,c
  3789  00141C  5003               	movf	___lwdiv@divisor,w,c
  3790  00141E  1004               	iorwf	___lwdiv@divisor+1,w,c
  3791  001420  E01B               	bz	l739
  3792  001422  0E01               	movlw	1
  3793  001424  6E07               	movwf	___lwdiv@counter,c
  3794  001426  D004               	goto	l1750
  3795  001428                     l1748:
  3796  001428  90D8               	bcf	status,0,c
  3797  00142A  3603               	rlcf	___lwdiv@divisor,f,c
  3798  00142C  3604               	rlcf	___lwdiv@divisor+1,f,c
  3799  00142E  2A07               	incf	___lwdiv@counter,f,c
  3800  001430                     l1750:
  3801  001430  AE04               	btfss	___lwdiv@divisor+1,7,c
  3802  001432  D7FA               	goto	l1748
  3803  001434                     u1060:
  3804  001434  90D8               	bcf	status,0,c
  3805  001436  3605               	rlcf	___lwdiv@quotient,f,c
  3806  001438  3606               	rlcf	___lwdiv@quotient+1,f,c
  3807  00143A  5003               	movf	___lwdiv@divisor,w,c
  3808  00143C  5C01               	subwf	___lwdiv@dividend,w,c
  3809  00143E  5004               	movf	___lwdiv@divisor+1,w,c
  3810  001440  5802               	subwfb	___lwdiv@dividend+1,w,c
  3811  001442  E305               	bnc	l1760
  3812  001444  5003               	movf	___lwdiv@divisor,w,c
  3813  001446  5E01               	subwf	___lwdiv@dividend,f,c
  3814  001448  5004               	movf	___lwdiv@divisor+1,w,c
  3815  00144A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3816  00144C  8005               	bsf	___lwdiv@quotient,0,c
  3817  00144E                     l1760:
  3818  00144E  90D8               	bcf	status,0,c
  3819  001450  3204               	rrcf	___lwdiv@divisor+1,f,c
  3820  001452  3203               	rrcf	___lwdiv@divisor,f,c
  3821  001454  2E07               	decfsz	___lwdiv@counter,f,c
  3822  001456  D7EE               	goto	u1060
  3823  001458                     l739:
  3824  001458  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3825  00145C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3826  001460  0012               	return		;funcret
  3827  001462                     __end_of___lwdiv:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           indf2	equ	0xFDF
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842 ;; *************** function _BCD2Dec *****************
  3843 ;; Defined at:
  3844 ;;		line 150 in file "I2C_DS1307.h"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  Temp_3          2    6[COMRAM] short 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  Temp_2          2   13[COMRAM] short 
  3849 ;;  Temp_1          2   11[COMRAM] short 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2    6[COMRAM] unsigned short 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         2       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        9 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    1
  3866 ;; This function calls:
  3867 ;;		___wmul
  3868 ;; This function is called by:
  3869 ;;		_DS1307
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text23
  3874  0012B2                     __ptext23:
  3875                           	opt stack 0
  3876  0012B2                     _BCD2Dec:
  3877                           	opt stack 28
  3878                           
  3879                           ;I2C_DS1307.h: 151: short Temp_1,Temp_2;
  3880                           ;I2C_DS1307.h: 152: Temp_2 = Temp_3 & 0x0F;
  3881                           
  3882                           ;incstack = 0
  3883  0012B2  0E0F               	movlw	15
  3884  0012B4  1407               	andwf	BCD2Dec@Temp_3,w,c
  3885  0012B6  6E0E               	movwf	BCD2Dec@Temp_2,c
  3886  0012B8  6A0F               	clrf	BCD2Dec@Temp_2+1,c
  3887                           
  3888                           ;I2C_DS1307.h: 153: Temp_1 = Temp_2;
  3889  0012BA  C00E  F00C         	movff	BCD2Dec@Temp_2,BCD2Dec@Temp_1
  3890  0012BE  C00F  F00D         	movff	BCD2Dec@Temp_2+1,BCD2Dec@Temp_1+1
  3891                           
  3892                           ;I2C_DS1307.h: 154: Temp_3 = 0xF0 & Temp_3;
  3893  0012C2  0EF0               	movlw	240
  3894  0012C4  1607               	andwf	BCD2Dec@Temp_3,f,c
  3895  0012C6  6A08               	clrf	BCD2Dec@Temp_3+1,c
  3896                           
  3897                           ;I2C_DS1307.h: 155: Temp_2 = Temp_3 >> 4;
  3898  0012C8  C007  F009         	movff	BCD2Dec@Temp_3,??_BCD2Dec
  3899  0012CC  C008  F00A         	movff	BCD2Dec@Temp_3+1,??_BCD2Dec+1
  3900  0012D0  0E04               	movlw	4
  3901  0012D2  6E0B               	movwf	(??_BCD2Dec+2)& (0+255),c
  3902  0012D4                     u1025:
  3903  0012D4  340A               	rlcf	??_BCD2Dec+1,w,c
  3904  0012D6  320A               	rrcf	??_BCD2Dec+1,f,c
  3905  0012D8  3209               	rrcf	??_BCD2Dec,f,c
  3906  0012DA  2E0B               	decfsz	(??_BCD2Dec+2)& (0+255),f,c
  3907  0012DC  D7FB               	goto	u1025
  3908  0012DE  C009  F00E         	movff	??_BCD2Dec,BCD2Dec@Temp_2
  3909  0012E2  C00A  F00F         	movff	??_BCD2Dec+1,BCD2Dec@Temp_2+1
  3910                           
  3911                           ;I2C_DS1307.h: 156: Temp_2 = 0x0F & Temp_2;
  3912  0012E6  0E0F               	movlw	15
  3913  0012E8  160E               	andwf	BCD2Dec@Temp_2,f,c
  3914  0012EA  6A0F               	clrf	BCD2Dec@Temp_2+1,c
  3915                           
  3916                           ;I2C_DS1307.h: 157: Temp_1 = Temp_2*10 + Temp_1;
  3917  0012EC  C00E  F001         	movff	BCD2Dec@Temp_2,___wmul@multiplier
  3918  0012F0  C00F  F002         	movff	BCD2Dec@Temp_2+1,___wmul@multiplier+1
  3919  0012F4  6A04               	clrf	___wmul@multiplicand+1,c
  3920  0012F6  0E0A               	movlw	10
  3921  0012F8  6E03               	movwf	___wmul@multiplicand,c
  3922  0012FA  ECA2  F00A         	call	___wmul	;wreg free
  3923  0012FE  500C               	movf	BCD2Dec@Temp_1,w,c
  3924  001300  2401               	addwf	?___wmul,w,c
  3925  001302  6E0C               	movwf	BCD2Dec@Temp_1,c
  3926  001304  500D               	movf	BCD2Dec@Temp_1+1,w,c
  3927  001306  2002               	addwfc	?___wmul+1,w,c
  3928  001308  6E0D               	movwf	BCD2Dec@Temp_1+1,c
  3929                           
  3930                           ;I2C_DS1307.h: 158: return Temp_1;
  3931  00130A  C00C  F007         	movff	BCD2Dec@Temp_1,?_BCD2Dec
  3932  00130E  C00D  F008         	movff	BCD2Dec@Temp_1+1,?_BCD2Dec+1
  3933  001312  0012               	return		;funcret
  3934  001314                     __end_of_BCD2Dec:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           postinc0	equ	0xFEE
  3943                           wreg	equ	0xFE8
  3944                           indf2	equ	0xFDF
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function ___wmul *****************
  3950 ;; Defined at:
  3951 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  multiplier      2    0[COMRAM] unsigned int 
  3954 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  product         2    4[COMRAM] unsigned int 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2    0[COMRAM] unsigned int 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, prodl, prodh
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         4       0       0       0       0       0       0       0       0
  3967 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3969 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3970 ;;Total ram usage:        6 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_BCD2Dec
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text24
  3980  001544                     __ptext24:
  3981                           	opt stack 0
  3982  001544                     ___wmul:
  3983                           	opt stack 28
  3984                           
  3985                           ;incstack = 0
  3986  001544  5001               	movf	___wmul@multiplier,w,c
  3987  001546  0203               	mulwf	___wmul@multiplicand,c
  3988  001548  CFF3 F005          	movff	prodl,___wmul@product
  3989  00154C  CFF4 F006          	movff	prodh,___wmul@product+1
  3990  001550  5001               	movf	___wmul@multiplier,w,c
  3991  001552  0204               	mulwf	___wmul@multiplicand+1,c
  3992  001554  50F3               	movf	prodl,w,c
  3993  001556  2606               	addwf	___wmul@product+1,f,c
  3994  001558  5002               	movf	___wmul@multiplier+1,w,c
  3995  00155A  0203               	mulwf	___wmul@multiplicand,c
  3996  00155C  50F3               	movf	prodl,w,c
  3997  00155E  2606               	addwf	___wmul@product+1,f,c
  3998  001560  C005  F001         	movff	___wmul@product,?___wmul
  3999  001564  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4000  001568  0012               	return		;funcret
  4001  00156A                     __end_of___wmul:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           postinc0	equ	0xFEE
  4010                           wreg	equ	0xFE8
  4011                           indf2	equ	0xFDF
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           prodh	equ	0xFF4
  4020                           prodl	equ	0xFF3
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           indf2	equ	0xFDF
  4024                           fsr2h	equ	0xFDA
  4025                           fsr2l	equ	0xFD9
  4026                           status	equ	0xFD8
  4027                           
  4028                           	psect	rparam
  4029  0000                     tblptru	equ	0xFF8
  4030                           tblptrh	equ	0xFF7
  4031                           tblptrl	equ	0xFF6
  4032                           tablat	equ	0xFF5
  4033                           prodh	equ	0xFF4
  4034                           prodl	equ	0xFF3
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           indf2	equ	0xFDF
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           postinc0	equ	0xFEE
  4048                           wreg	equ	0xFE8
  4049                           indf2	equ	0xFDF
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    8
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 12
		 -> NULL(NULL[0]), STR_18(CODE[8]), STR_16(CODE[9]), STR_14(CODE[8]), 
		 -> STR_12(CODE[11]), STR_10(CODE[8]), STR_8(CODE[7]), STR_6(CODE[9]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), txt_DS1307(COMRAM[12]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    meridiano	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> NULL(NULL[0]), STR_22(CODE[5]), STR_21(CODE[16]), STR_20(CODE[15]), 
		 -> STR_19(CODE[4]), STR_17(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), txt_DS1307(COMRAM[12]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_set_time_DS1307
    _set_time_DS1307->_escribir_DS1307
    _escribir_DS1307->_Dec2BCD
    _Dec2BCD->___awdiv
    _Leer_Pulsador->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _DS1307->_BCD2Dec
    _leer_DS1307->_WriteI2C
    _WriteI2C->_IdleI2C
    _dia_semana->_Lcd_Out2
    _putsUSART->_WriteUSART
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    ___lwmod->___lwdiv
    _BCD2Dec->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19537
                             _DS1307
                            _IdleI2C
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                      _Leer_Pulsador
                            _OpenI2C
                          _OpenUSART
                    _set_time_DS1307
 ---------------------------------------------------------------------------------
 (1) _set_time_DS1307                                     14     0     14    4175
                                             22 COMRAM    14     0     14
                            _Dec2BCD
                    _escribir_DS1307
 ---------------------------------------------------------------------------------
 (2) _escribir_DS1307                                      6     0      6    1677
                                             16 COMRAM     6     0      6
                            _Dec2BCD (ARG)
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _Dec2BCD                                              8     6      2    1812
                                              8 COMRAM     8     6      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     1      2     297
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Leer_Pulsador                                        0     0      0     120
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _DS1307                                               0     0      0   12098
                            _BCD2Dec
                           _Lcd_Out2
                            ___lwdiv
                            ___lwmod
                         _dia_semana
                        _leer_DS1307
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _leer_DS1307                                          5     1      4    1168
                                              2 COMRAM     5     1      4
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dia_semana                                           4     2      2    3473
                                              8 COMRAM     4     2      2
                           _Lcd_Out2
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            4     2      2     978
                                              1 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3    2397
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1983
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1074
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _BCD2Dec                                              9     7      2    1025
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307
     _BCD2Dec
       ___wmul
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _dia_semana
       _Lcd_Out2
         _Lcd_Chr_CP
         _Lcd_Cmd
       _putsUSART
         _WriteUSART
     _leer_DS1307
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _putsUSART
       _WriteUSART
   _IdleI2C
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Leer_Pulsador
     _Lcd_Cmd
   _OpenI2C
   _OpenUSART
   _set_time_DS1307
     _Dec2BCD
       ___awdiv
       ___awmod
     _escribir_DS1307
       _Dec2BCD (ARG)
         ___awdiv
         ___awmod
       _IdleI2C (ARG)
       _WriteI2C (ARG)
         _IdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      45       1       72.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      20        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 18 20:33:04 2018

                    ?_leer_DS1307 0003                                PL2 0B5C  
                              PL4 10BE                                PL6 1002  
                              PL8 0B6C                       _SSPSTATbits 000FC7  
                              l91 0C22                                u15 0DB0  
                              u25 0DBA                                u35 0DCA  
                              u45 0CB8                                u55 0CC2  
                              u65 0CD2                      ___awdiv@sign 0006  
                     __CFG_BOR$ON 000000               ___wmul@multiplicand 0003  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                               PL10 100C  
                             PL20 11B8                               PL12 0E38  
                             PL30 0F50                               PL22 0E50  
                             PL14 0D48                               PL40 0D98  
                             PL32 0B76                               PL24 0D78  
                             PL16 0D60                               PL50 0B7E  
                             PL42 0E88                               PL34 0D86  
                             PL26 0E5A                               PL18 0D6A  
                             PL52 0B8A                               PL44 11C4  
                             PL36 0E76                               PL28 0E68  
                             PL54 0B94                               PL46 0C96  
                             PL38 1146                               PL56 0B9E  
                             PL48 0CA0          __size_of_escribir_DS1307 002C  
                             l204 14F0                               l134 151A  
                             l143 1316                               l152 135A  
                             l232 138E                               l137 153E  
                             l146 1334                               l323 147E  
                             l155 1364                               l236 13A2  
                             l149 133A                               l237 13A4  
                             l238 13AE                               l239 13B0  
                             l184 0EAE                               l299 1596  
                 __end_of_BCD2Dec 1314                               l739 1458  
                             l749 14DA                      __CFG_CPB$OFF 000000  
                             u240 149A                               u270 1594  
                    __CFG_CPD$OFF 000000                               u820 13E8  
                             u830 1412                               u827 13E4  
                             u780 119C                               u940 1280  
                             u837 140E                               u790 11B2  
                             u880 1210                               u787 119A  
                             u797 11B0                               _Day 002B  
                      _Baud_USART 0805                      ___awmod@sign 0006  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1068 1488                              l1500 1510  
                            l1600 11F4                              l1700 1048  
                            l1702 1058                              l1710 1090  
                            l1606 1204                              l1622 1234  
                            l1560 1166                              l1552 15C0  
                            l1704 1068                              l1608 120C  
                            l1570 118E                              l1562 116C  
                            l1706 1078                              l1810 09C2  
                            l1626 1240                              l1618 122A  
                            l1642 1268                              l1556 115A  
                            l1750 1430                              l1574 11A4  
                            l1558 1160                              l1566 1174  
                            l1806 09AC                              l1902 1390  
                            l1662 12A8                              l1654 1292  
                            l1646 1274                              l1638 125C  
                            l1760 144E                              l1568 1186  
                            l1648 127C                              l1770 14BA  
                            l1498 150A                              l1594 11E4  
                            l1658 129C                              l1748 1428  
                            l1694 1018                              l1950 0F24  
                            l1776 14D0                              l1768 14B2  
                            l1696 1028                              l1960 0F46  
                            l1944 0EFC                              l1698 1038  
                            l1954 0F36                              l1956 0F3E  
                            l1948 0F1C                              l1894 1382  
                            STR_1 0879                              STR_2 0881  
                            STR_3 0879                              STR_4 088D  
                            STR_5 088D                              STR_6 0833  
                            STR_7 087D                              STR_8 085D  
                            STR_9 0885                              u1120 09B6  
                            u1025 12D4                              u1060 1434  
                            u1090 14BE                              u1307 0BF4  
                            u1317 0C04                              u1407 0E1E  
                            u1327 0C14                              u1417 0E2C  
                            u1337 0C30                              u1427 0CEA  
                            u1347 0C42                              u1437 0CF4  
                            u1357 0C62                              u1277 0BC4  
                            u1447 0D1C                              u1367 0C74  
                            u1287 0BD4                              u1457 0D26  
                            u1377 0DE2                              u1297 0BE4  
                            u1467 0D30                              u1387 0DEC  
                            u1477 0D3C                              u1397 0E14  
                            _Date 0029                   __end_of_Dec2BCD 1146  
                            _Menu 0035                              _Year 0025  
                            _main 0E92                   _set_time_DS1307 0F5C  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr2l 000FD9                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                   __CFG_IESO$OFF 000000                   __end_of_IdleI2C 15D6  
                 __end_of_Lcd_Cmd 0E38                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_ReadI2C 159E  
                      _Lcd_Chr_CP 0CAA                   __end_of_OpenI2C 1584  
            dia_semana@dia_semana 0009                    Lcd_Out2@buffer 0005  
                   __CFG_PLLDIV$4 000000                             ?_main 0001  
                 __end_of___awdiv 124A                             STR_10 084D  
                           STR_11 0889                             STR_12 0828  
                           STR_20 0819                             STR_13 086D  
                           STR_21 0809                             STR_22 0864  
                           STR_14 0855                             STR_15 0875  
                           STR_16 083C                             STR_17 0871  
                           STR_18 0845                             STR_19 0869  
                 __end_of___awmod 12B2                             _CMCON 000FB4  
                 ___awdiv@divisor 0003                   __end_of___lwdiv 1462  
                 __end_of___lwmod 14E4                   ___awdiv@counter 0005  
                           _RCSTA 000FAB                             _SPBRG 000FAF  
                   __CFG_USBDIV$1 000000                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                           _Hours 002D                             _Salir 0033  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                             _Month 0027  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                   ??_Leer_Pulsador 0004  
                  __CFG_EBTRB$OFF 000000                             tablat 000FF5  
                           status 000FD8                    __CFG_ICPRT$OFF 000000  
                __end_of_Lcd_Init 0C96                  __end_of_Lcd_Out2 11B8  
                  WriteUSART@data 0001                   __initialization 159E  
                    __end_of_main 0F50                         ??_BCD2Dec 0009  
                          ??_main 0025                     __activetblptr 000002  
          set_time_DS1307@set_mes 0021                   __CFG_CCP2MX$OFF 000000  
                       ??_Dec2BCD 000B           __end_of_set_time_DS1307 1002  
               ??_escribir_DS1307 0017                            _ADCON1 000FC1  
                          _DS1307 0892                  ___awdiv@dividend 0001  
                __end_of_WriteI2C 14A6                       OpenI2C@slew 0001  
                       ??_IdleI2C 0001                         ??_Lcd_Cmd 0001  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                         ??_ReadI2C 0001  
                       ??_OpenI2C 0002                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 005A                       ?_Lcd_Chr_CP 0001  
                          ___wmul 1544                         ??___awdiv 0005  
                  __CFG_STVREN$ON 000000                         ??___awmod 0005  
                       ??___lwdiv 0005                         ??___lwmod 000C  
                    _Bit_Rate_I2C 0801                            clear_0 15A4  
                ___awdiv@quotient 0007              __size_of_leer_DS1307 005C  
                 ___awmod@divisor 0003                   ___awmod@counter 0005  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                      __accesstop 0060           __end_of__initialization 15AA  
                 __CFG_PBADEN$OFF 000000                     ___rparam_used 000001  
                      _WriteUSART 15B4                    __pcstackCOMRAM 0001  
                      __end_ofPL2 0B6C                        __end_ofPL4 10CA  
                      __end_ofPL6 100C                        __end_ofPL8 0B76  
      set_time_DS1307@set_minutos 0019                         ?_Lcd_Init 0001  
                       ?_Lcd_Out2 0004                 __end_of_OpenUSART 13CA  
                         ?_DS1307 0001                  ?_set_time_DS1307 0017  
             __size_of_Lcd_Chr_CP 009E           set_time_DS1307@set_date 001F  
         set_time_DS1307@set_dias 001D           set_time_DS1307@set_anno 0023  
                      _dia_semana 1016      leer_DS1307@dirrecion_esclavo 0003  
                         ?___wmul 0001                           _BCD2Dec 12B2  
    leer_DS1307@dirrecion_memoria 0005                     putsUSART@data 0002  
                       ?_WriteI2C 0001                           _Dec2BCD 10CA  
                      ??_Lcd_Init 0004                        ??_Lcd_Out2 0007  
              __size_of_putsUSART 004E                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                   __size_of_DS1307 02CA  
                         _SSPSTAT 000FC7                           _IdleI2C 15C6  
                 __CFG_VREGEN$OFF 000000                           _Lcd_Cmd 0DA2  
                         _ReadI2C 1584                           _OpenI2C 156A  
                         __Hparam 0000                           _Minutes 002F  
                         _Seconds 0031                     Dec2BCD@Temp_1 000D  
                   Dec2BCD@Temp_2 000F                     Dec2BCD@Temp_3 0009  
                         __Lparam 0000                       ?_WriteUSART 0001  
                         ___awdiv 11D2                           ___awmod 124A  
                 __size_of___wmul 0026                           ___lwdiv 1418  
                         ___lwmod 14A6                      __psmallconst 0800  
                         __pcinit 159E                        ??_WriteI2C 0002  
                 _escribir_DS1307 1518                           __ramtop 0800  
                         __ptext0 0E92                           __ptext1 0F5C  
                         __ptext2 1518                           __ptext3 10CA  
                         __ptext4 124A                           __ptext5 11D2  
                         __ptext6 1370                           __ptext7 156A  
                         __ptext8 14E4                           __ptext9 0BA6  
                ___awmod@dividend 0001             __end_of_Leer_Pulsador 1518  
            end_of_initialization 15AA                     __Lmediumconst 0000  
                     ?_dia_semana 0009                __end_of_Baud_USART 0809  
                       _RCSTAbits 000FAB                      ??_Lcd_Chr_CP 0001  
                       Lcd_Out2@x 0004                         Lcd_Out2@y 0007  
                         postinc0 000FEE                 __end_of_putsUSART 1418  
                       _PORTDbits 000F83                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
             __size_of_WriteUSART 0012                    __end_of_DS1307 0B5C  
              __end_of_Lcd_Chr_CP 0D48                        _txt_DS1307 003A  
                       _TXSTAbits 000FAC           __end_of_escribir_DS1307 1544  
                   ??_leer_DS1307 0007                    __end_of___wmul 156A  
             __size_of_dia_semana 00A8                       __end_ofPL10 1016  
                     __end_ofPL20 11C4                       __end_ofPL12 0E50  
                     __end_ofPL30 0F5C                       __end_ofPL22 0E5A  
                     __end_ofPL14 0D60                       __end_ofPL40 0DA2  
                     __end_ofPL32 0B7E                       __end_ofPL24 0D86  
                     __end_ofPL16 0D6A                       __end_ofPL50 0B8A  
                     __end_ofPL42 0E92                       __end_ofPL34 0D98  
                     __end_ofPL26 0E68                       __end_ofPL18 0D78  
                     __end_ofPL52 0B94                       __end_ofPL44 11D2  
                     __end_ofPL36 0E88                       __end_ofPL28 0E76  
                     __end_ofPL54 0B9E                       __end_ofPL46 0CA0  
                     __end_ofPL38 1156                       __end_ofPL56 0BA6  
                     __end_ofPL48 0CAA               start_initialization 159E  
                        ??_DS1307 0010                  WriteI2C@data_out 0002  
               __size_of_Lcd_Init 00F0                 __size_of_Lcd_Out2 0062  
             escribir_DS1307@dato 0015                         _OpenUSART 1370  
     set_time_DS1307@set_segundos 0017                          ??___wmul 0005  
                        ?_BCD2Dec 0007                  __CFG_LPT1OSC$OFF 000000  
             __end_of_leer_DS1307 1370                 __size_of_WriteI2C 0044  
                     __pbssCOMRAM 0025          set_time_DS1307@set_horas 001B  
                        ?_Dec2BCD 0009                          ?_IdleI2C 0001  
                      ?_OpenUSART 0001                          ?_Lcd_Cmd 0001  
                        ?_ReadI2C 0001          __size_of_set_time_DS1307 00A6  
                        ?_OpenI2C 0001                  ___lwdiv@dividend 0001  
                    ??_WriteUSART 0001                  ?_escribir_DS1307 0011  
                        ?___awdiv 0001                          ?___awmod 0001  
                        ?___lwdiv 0001                          ?___lwmod 0008  
                     __smallconst 0800                  ___lwdiv@quotient 0005  
                       _meridiano 0037                __end_of_WriteUSART 15C6  
                    ??_dia_semana 000B                    ___wmul@product 0005  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                __CFG_WDTPS$32768 000000                       _leer_DS1307 1314  
                __size_of_BCD2Dec 0062                      Lcd_Init@data 0005  
                       _putsUSART 13CA                 ___wmul@multiplier 0001  
              __end_of_dia_semana 10BE                      Lcd_Out2@data 0008  
                        _Lcd_Init 0BA6                          _Lcd_Out2 1156  
                __size_of_Dec2BCD 007C                  OpenI2C@sync_mode 0002  
                     ??_OpenUSART 0003                  __size_of_IdleI2C 0010  
                 OpenUSART@config 0003                  __size_of_Lcd_Cmd 0096  
                __size_of_ReadI2C 001A                          __Hrparam 0000  
                __size_of_OpenI2C 001A                          __Lrparam 0000  
               ??_set_time_DS1307 0025                  __size_of___awdiv 0078  
                __size_of___awmod 0068                  __size_of___lwdiv 004A  
                __size_of___lwmod 003E            __size_of_Leer_Pulsador 0034  
                        _WriteI2C 1462                        ?_putsUSART 0002  
                  Lcd_Chr_CP@data 0003                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0007                          __ptext10 0892  
                        __ptext11 1314                          __ptext20 0CAA  
                        __ptext12 1462                          __ptext21 14A6  
                        __ptext13 15C6                          __ptext22 1418  
                        __ptext14 1584                          __ptext23 12B2  
                        __ptext15 1016                          __ptext24 1544  
                        __ptext16 13CA                          __ptext17 15B4  
                        __ptext18 1156                          __ptext19 0DA2  
                     Lcd_Cmd@data 0003                     __size_of_main 00BE  
           __CFG_CPUDIV$OSC1_PLL2 000000                    OpenUSART@spbrg 0001  
                   _Leer_Pulsador 14E4                  ___lwmod@dividend 0008  
escribir_DS1307@dirrecion_esclavo 0011            leer_DS1307@Data_DS1307 0007  
escribir_DS1307@dirrecion_memoria 0013                       ??_putsUSART 0004  
                 ___lwmod@divisor 000A                   ___lwmod@counter 000C  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                  ?_Leer_Pulsador 0001              __end_of_Bit_Rate_I2C 0805  
                    _USART_Status 0039                     BCD2Dec@Temp_1 000C  
                   BCD2Dec@Temp_2 000E                     BCD2Dec@Temp_3 0007  
